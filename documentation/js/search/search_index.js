var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.099,1,2.16]],["body/modules/AppModule.html",[0,1.455,1,4.085,2,1.233,3,1.986,4,2.67,5,2.67,6,3.445,7,0.03,8,2.877,9,3.139,10,2.355,11,1.713,12,1.57,13,0.345,14,0.307,15,0.307,16,3.181,17,3.207,18,0.67,19,0.564,20,3.181,21,2.67,22,2.333,23,1.233,24,4.373,25,3.181,26,2.333,27,2.333,28,3.946,29,1.059,30,3.181,31,3.181,32,3.181,33,3.181,34,3.181,35,3.181,36,2.333,37,3.181,38,0.345,39,0.234,40,2.333,41,0.019,42,0.019]],["title/controllers/AuthController.html",[43,1.629,44,2.16]],["body/controllers/AuthController.html",[7,0.029,13,0.306,14,0.272,15,0.272,18,0.609,19,0.5,38,0.306,39,0.207,40,2.069,41,0.018,42,0.018,43,1.392,44,2.63,45,1.392,46,2.367,47,2.069,48,2.821,49,0.458,50,1.241,51,1.487,52,4.683,53,4.02,54,2.821,55,4.114,56,4.404,57,4.233,58,2.376,59,4.02,60,1.685,61,0.987,62,2.821,63,1.241,64,0.987,65,0.712,66,1.241,67,1.241,68,2.821,69,3.34,70,2.821,71,2.821,72,4.683,73,2.069,74,2.367,75,2.069,76,2.948,77,1.519,78,2.069,79,2.821,80,2.367,81,2.367,82,1.846,83,2.821,84,2.367,85,2.312,86,2.821,87,2.821,88,2.821,89,2.821,90,2.821,91,2.821,92,2.821,93,1.094,94,1.013,95,0.871,96,2.821,97,2.821]],["title/modules/AuthModule.html",[0,1.099,6,1.951]],["body/modules/AuthModule.html",[0,1.32,2,1.073,3,1.801,6,3.773,7,0.03,8,2.751,9,3.002,10,2.136,11,1.49,12,1.366,13,0.3,14,0.267,15,0.267,17,2.908,18,0.666,19,0.49,22,2.029,23,1.073,38,0.3,39,0.203,41,0.017,42,0.017,44,3.032,45,1.957,85,2.498,94,0.994,98,2.322,99,2.767,100,2.322,101,2.726,102,2.726,103,2.498,104,2.767,105,2.344,106,2.767,107,3.965,108,1.49,109,2.767,110,2.029,111,2.594,112,1.811,113,2.767,114,2.767,115,2.908,116,2.029,117,2.908,118,2.767,119,2.322,120,2.767,121,2.767,122,2.767,123,2.767,124,2.767,125,2.322,126,2.029]],["title/classes/BCryptProvider.html",[39,0.243,127,1.499]],["body/classes/BCryptProvider.html",[7,0.03,13,0.326,14,0.29,15,0.29,18,0.326,38,0.526,39,0.221,41,0.019,42,0.019,49,0.487,51,1.115,60,1.762,61,1.032,65,1.015,93,1.88,95,1.496,127,1.909,128,1.967,129,2.204,130,2.264,131,3.556,132,3.556,133,4.069,134,2.751,135,3.528,136,3.006,137,4.069,138,3.006,139,3.528,140,4.069,141,2.032,142,4.069,143,3.528,144,4.069,145,4.204,146,2.036,147,4.204,148,3.006,149,3.083,150,3.006,151,1.63,152,4.204,153,3.006]],["title/injectables/ChangePasswordService.html",[85,1.629,154,0.535]],["body/injectables/ChangePasswordService.html",[7,0.03,13,0.287,14,0.255,15,0.255,18,0.596,19,0.469,23,1.027,29,0.882,38,0.287,39,0.195,41,0.017,42,0.017,49,0.43,50,1.186,51,1.199,55,3.637,60,1.895,61,0.943,63,1.186,64,0.943,65,0.681,66,1.186,67,0.818,80,2.224,81,2.224,85,1.897,93,1.027,94,1.972,95,1.395,127,2.253,146,1.49,149,2.818,151,1.027,154,0.623,155,0.951,156,3.795,157,2.224,158,2.435,159,1.49,160,1.734,161,2.448,162,3.316,163,2.649,164,2.514,165,1.734,166,2.649,167,3.316,168,1.427,169,1.943,170,1.943,171,1.734,172,1.745,173,1.897,174,3.843,175,2.818,176,2.224,177,2.818,178,2.818,179,3.637,180,2.448,181,2.649,182,2.649,183,2.649,184,2.224,185,2.224,186,3.225,187,2.649,188,1.734]],["title/controllers/CompaniesController.html",[43,1.629,189,2.16]],["body/controllers/CompaniesController.html",[7,0.029,13,0.295,14,0.262,15,0.262,18,0.601,19,0.481,38,0.295,39,0.2,41,0.017,42,0.017,43,1.34,45,1.34,47,1.992,49,0.44,50,1.207,51,1.468,56,4.364,57,4.186,58,2.312,61,0.96,63,1.207,64,0.96,65,0.693,66,1.207,67,1.207,73,2.869,74,2.279,75,1.992,76,2.869,77,1.463,84,2.279,93,1.517,95,1.207,141,1.922,159,1.053,172,1.777,189,2.559,190,2.279,191,2.869,192,2.711,193,2.869,194,2.715,195,4.186,196,2.715,197,2.715,198,2.279,199,2.715,200,2.715,201,3,202,1.777,203,2.715,204,1.777,205,2.279,206,2.263,207,2.279,208,2.715,209,2.263,210,2.279,211,2.715,212,2.715,213,3.283,214,3.912,215,2.715,216,2.715,217,2.715,218,2.279,219,2.715,220,2.715]],["title/modules/CompaniesModule.html",[0,1.099,221,2.16]],["body/modules/CompaniesModule.html",[0,1.654,2,1.495,3,2.258,7,0.029,10,2.677,11,2.077,12,1.903,13,0.418,14,0.372,15,0.372,18,0.597,19,0.683,38,0.418,39,0.283,41,0.022,42,0.022,45,2.453,105,2.939,116,2.828,189,3.599,206,2.868,209,2.868,221,4.153,222,3.236,223,3.236,224,3.856,225,3.856,226,3.646]],["title/entities/Company.html",[227,1.951,228,1.951]],["body/entities/Company.html",[7,0.029,13,0.325,14,0.289,15,0.289,18,0.325,29,0.997,38,0.325,39,0.22,41,0.018,42,0.018,49,0.486,58,3.472,61,1.442,64,1.355,65,1.04,130,2.259,141,2.586,227,1.771,228,2.479,229,1.96,230,2.514,231,3.166,232,3.549,233,4.062,234,3.549,235,3.549,236,4.062,237,3.52,238,2.995,239,5.11,240,2.995,241,4.4,242,2.514,243,2.744,244,2.995,245,2.995,246,2.995,247,2.995,248,2.514,249,2.744,250,2.995,251,3.52,252,2.514,253,3.52,254,2.995]],["title/classes/CreateCompaniesTable1672866368425.html",[39,0.243,255,2.421]],["body/classes/CreateCompaniesTable1672866368425.html",[7,0.029,13,0.295,14,0.262,15,0.262,18,0.295,29,0.904,36,1.992,38,0.295,39,0.2,41,0.017,42,0.017,49,0.44,50,1.207,51,1.468,61,0.96,63,1.207,64,1.501,65,1.054,66,1.207,67,1.207,95,1.207,128,1.777,134,3,146,1.945,180,1.34,191,3.679,192,2.711,231,1.777,232,1.992,234,1.992,235,1.992,243,1.777,249,1.777,255,2.869,256,3.848,257,1.992,258,3.283,259,3.848,260,4.648,261,3.283,262,3.283,263,3.283,264,4.994,265,2.715,266,3.283,267,2.279,268,2.869,269,2.279,270,2.279,271,3.283,272,2.279,273,2.279,274,2.279,275,4.21,276,3.283,277,3.283,278,2.715]],["title/injectables/CreateCompanyService.html",[154,0.535,206,1.629]],["body/injectables/CreateCompanyService.html",[7,0.03,13,0.322,14,0.286,15,0.286,18,0.597,19,0.525,23,1.149,29,0.987,38,0.322,39,0.218,41,0.018,42,0.018,49,0.481,50,1.285,51,1.276,61,1.022,63,1.285,64,1.281,65,0.738,66,1.285,67,0.915,95,0.915,146,1.614,151,1.149,154,0.675,155,1.065,158,2.592,159,1.614,161,2.576,165,1.94,167,3.53,168,1.597,172,1.347,175,3.054,177,3.054,178,3.054,179,3.054,180,2.055,195,3.828,204,1.94,205,2.488,206,2.055,228,3.25,232,3.054,234,3.054,235,3.054,279,4.039,280,2.488,281,2.488,282,2.965,283,3.495,284,2.965,285,2.488,286,2.488,287,2.965,288,2.965]],["title/injectables/CreateUserService.html",[154,0.535,289,1.629]],["body/injectables/CreateUserService.html",[7,0.029,13,0.317,14,0.282,15,0.282,18,0.616,19,0.518,23,1.134,29,0.974,38,0.317,39,0.215,41,0.018,42,0.018,49,0.474,50,1.273,51,1.267,60,2.003,61,1.012,63,1.273,64,1.274,65,0.731,66,1.273,67,0.903,93,1.599,94,1.05,95,1.273,127,2.357,146,1.599,149,3.025,151,1.134,154,0.669,155,1.05,158,2.573,159,1.599,160,1.914,161,2.561,162,3.504,164,2.699,165,1.914,168,1.575,170,2.145,171,1.914,172,1.873,173,2.036,185,2.455,188,1.914,204,1.914,289,2.036,290,4.01,291,2.455,292,2.925,293,3.805,294,2.925,295,2.145,296,2.145,297,3.462,298,2.699,299,3.025,300,3.462,301,2.925,302,2.925,303,2.925]],["title/classes/CreateUsersTable1672782049384.html",[39,0.243,304,2.421]],["body/classes/CreateUsersTable1672782049384.html",[7,0.029,13,0.277,14,0.246,15,0.246,18,0.277,29,0.851,36,2.746,38,0.277,39,0.188,41,0.016,42,0.016,49,0.415,50,1.155,51,1.438,60,1.072,61,0.919,63,1.155,64,1.514,65,1.07,66,1.155,67,1.155,95,1.367,128,1.673,134,2.898,146,1.891,173,1.262,180,1.262,192,2.619,231,1.673,243,1.673,249,1.673,257,1.875,258,3.142,259,3.718,260,4.552,261,3.142,262,3.142,263,3.142,264,4.919,266,3.142,267,2.145,268,2.746,269,2.145,270,2.145,271,3.718,272,2.145,273,2.145,274,2.145,275,4.552,276,3.142,277,3.142,298,1.673,304,2.746,305,3.718,306,3.576,307,2.556,308,2.556,309,2.556,310,2.556,311,2.556,312,2.145,313,2.556,314,2.145,315,2.556]],["title/modules/DatabaseModule.html",[0,1.099,316,2.421]],["body/modules/DatabaseModule.html",[0,1.821,2,1.741,7,0.029,13,0.487,14,0.433,15,0.433,18,0.593,19,0.796,38,0.487,39,0.33,41,0.024,42,0.024,105,2.655,126,3.294,316,4.011,317,4.492,318,4.325,319,4.492]],["title/modules/EncriptationModule.html",[0,1.099,8,1.629]],["body/modules/EncriptationModule.html",[0,1.723,2,1.594,3,2.352,7,0.029,8,3.027,10,2.789,11,2.214,12,2.029,13,0.446,14,0.396,15,0.396,18,0.562,19,0.728,38,0.446,39,0.302,41,0.023,42,0.023,105,2.43,126,3.797,127,2.92,320,3.45,321,3.45,322,4.111,323,4.111]],["title/injectables/FindCompaniesService.html",[154,0.535,209,1.629]],["body/injectables/FindCompaniesService.html",[7,0.03,13,0.346,14,0.308,15,0.308,18,0.585,19,0.566,23,1.238,29,1.063,38,0.346,39,0.235,41,0.019,42,0.019,49,0.518,50,1.353,51,1.327,61,1.076,63,1.353,64,1.229,65,0.777,66,1.353,67,0.985,93,1.7,95,0.985,141,2.099,146,1.7,151,1.238,154,0.711,155,1.146,158,2.361,159,1.7,161,2.66,168,1.72,172,1.45,201,3.276,209,2.164,228,1.887,281,2.68,283,3.679,285,2.68,286,2.68,324,4.201,325,2.68,326,3.193,327,3.679,328,3.193,329,2.68,330,2.68,331,2.68,332,4.384,333,3.193,334,2.68]],["title/injectables/FindUsersService.html",[154,0.535,335,1.629]],["body/injectables/FindUsersService.html",[7,0.03,13,0.327,14,0.291,15,0.291,18,0.571,19,0.534,23,1.169,29,1.004,38,0.327,39,0.222,41,0.019,42,0.019,49,0.489,50,1.301,51,1.288,61,1.035,63,1.301,64,1.192,65,0.747,66,1.301,67,0.931,93,1.634,94,1.083,95,0.931,141,2.036,146,1.634,151,1.169,154,0.684,155,1.083,158,2.27,159,1.634,160,1.973,161,2.596,164,2.757,168,1.624,171,1.973,172,1.37,173,1.489,188,1.973,201,3.178,296,2.212,298,1.973,299,2.212,327,3.537,329,2.531,330,2.531,331,2.531,334,4.413,335,2.08,336,4.077,337,2.531,338,3.016,339,3.016,340,4.214,341,3.016,342,3.016,343,3.016]],["title/injectables/JwtAuthGuard.html",[154,0.535,202,2.16]],["body/injectables/JwtAuthGuard.html",[7,0.029,13,0.48,14,0.426,15,0.426,18,0.636,19,0.784,38,0.48,39,0.325,41,0.024,42,0.024,108,2.382,112,2.894,154,0.879,155,1.588,202,3.546,344,3.712,345,3.244,346,3.712,347,3.244,348,2.615,349,4.423]],["title/injectables/JwtStrategy.html",[101,1.778,154,0.535]],["body/injectables/JwtStrategy.html",[7,0.029,13,0.38,14,0.337,15,0.337,18,0.607,19,0.62,38,0.38,39,0.257,41,0.021,42,0.021,49,0.568,50,1.44,51,1.391,61,1.145,63,1.08,64,0.859,65,0.62,66,1.08,67,1.08,101,2.513,108,1.885,111,3.052,112,2.29,151,1.357,154,0.757,155,1.257,159,2.034,348,2.069,350,2.938,351,3.915,352,3.5,353,4.665,354,3.5,355,2.938,356,3.5,357,3.5,358,2.938,359,2.567,360,2.567,361,2.938,362,2.938,363,2.938,364,3.5,365,3.5,366,3.5,367,3.5,368,3.5,369,3.5,370,3.5,371,2.938,372,3.5]],["title/injectables/LocalAuthGuard.html",[82,2.16,154,0.535]],["body/injectables/LocalAuthGuard.html",[7,0.029,13,0.48,14,0.426,15,0.426,18,0.636,19,0.784,38,0.48,39,0.325,41,0.024,42,0.024,82,3.546,108,2.382,112,2.894,154,0.879,155,1.588,345,3.244,346,3.712,348,2.615,373,3.712,374,3.244,375,4.423]],["title/injectables/LocalStrategy.html",[102,1.778,154,0.535]],["body/injectables/LocalStrategy.html",[7,0.029,13,0.354,14,0.315,15,0.315,18,0.59,19,0.578,38,0.354,39,0.24,40,2.394,41,0.02,42,0.02,49,0.529,50,1.374,51,1.343,60,2.28,61,1.093,63,1.374,64,1.093,65,0.789,66,1.374,67,1.007,93,1.266,95,1.007,102,2.397,103,2.899,108,1.758,141,2.462,146,1.726,151,1.266,154,0.722,155,1.172,159,1.266,173,2.5,348,1.93,351,3.735,358,2.74,359,2.394,361,2.74,362,2.74,363,2.74,376,2.74,377,3.264,378,3.264,379,4.451,380,3.264,381,2.394,382,3.264,383,3.264,384,3.735,385,3.264]],["title/injectables/LoginService.html",[103,1.629,154,0.535]],["body/injectables/LoginService.html",[7,0.03,13,0.267,14,0.237,15,0.237,18,0.617,19,0.436,23,0.955,29,0.82,38,0.267,39,0.181,41,0.016,42,0.016,49,0.399,50,1.124,51,1.149,60,2.008,61,0.894,63,1.124,64,0.894,65,0.645,66,1.124,67,0.76,93,1.857,94,1.922,95,1.124,103,1.798,110,1.806,127,2.175,143,2.067,144,2.067,146,1.412,151,0.955,154,0.591,155,0.884,158,2.334,159,1.412,160,1.611,161,2.364,162,3.179,164,2.383,165,1.611,167,2.671,168,1.326,169,1.806,170,1.806,171,1.611,172,1.969,173,2.523,175,1.806,176,2.067,177,1.806,178,1.806,179,3.179,180,2.139,184,3.057,186,3.057,188,1.611,295,2.671,355,2.067,384,3.057,386,2.067,387,5.537,388,2.462,389,4.02,390,2.462,391,3.057,392,2.462,393,2.462,394,3.642,395,3.642,396,2.462,397,2.462,398,2.462,399,2.462,400,3.642,401,2.462]],["title/interfaces/RequestWithUser.html",[69,2.16,402,2.16]],["body/interfaces/RequestWithUser.html",[7,0.029,13,0.459,14,0.408,15,0.408,18,0.572,38,0.459,41,0.023,42,0.023,49,0.686,65,0.75,69,3.449,77,2.278,78,3.102,94,2.321,130,2.839,169,3.102,348,3.116,402,2.768,403,4.23,404,3.55,405,5.742]],["title/entities/User.html",[94,1.185,227,1.951]],["body/entities/User.html",[7,0.029,13,0.291,14,0.259,15,0.259,18,0.291,29,0.893,38,0.291,39,0.197,41,0.017,42,0.017,49,0.435,58,3.507,60,1.909,61,1.456,64,1.396,65,1.051,94,1.392,130,2.088,141,2.629,173,2.247,227,1.586,229,1.755,231,2.979,233,3.821,236,3.821,237,3.254,239,5.12,241,4.186,242,2.251,243,2.537,248,2.251,249,2.537,251,3.254,252,2.251,253,3.254,297,3.821,298,2.979,299,3.339,312,3.254,314,3.254,406,2.251,407,2.682,408,3.877,409,2.682,410,2.682,411,2.682,412,2.682,413,2.682,414,2.682,415,2.682,416,2.682,417,2.682]],["title/controllers/UsersController.html",[43,1.629,418,2.16]],["body/controllers/UsersController.html",[7,0.029,13,0.308,14,0.274,15,0.274,18,0.587,19,0.503,38,0.308,39,0.209,41,0.018,42,0.018,43,1.401,45,1.401,47,2.082,49,0.461,50,1.246,51,1.491,56,4.411,57,4.241,58,2.387,61,0.991,63,1.246,64,0.991,65,0.716,66,1.246,67,1.246,73,3.447,75,2.082,76,2.082,77,1.529,93,1.566,95,1.246,141,1.97,159,1.101,172,1.834,192,2.387,193,2.962,198,2.383,201,3.075,204,1.858,207,2.383,210,2.383,213,3.389,218,2.383,289,2.32,293,4.123,295,2.082,300,2.383,306,2.962,335,2.32,418,2.642,419,2.383,420,2.839,421,2.839,422,2.839,423,2.839,424,2.839,425,2.839,426,2.839,427,2.839,428,2.839,429,2.839,430,2.839]],["title/modules/UsersModule.html",[0,1.099,9,1.778]],["body/modules/UsersModule.html",[0,1.536,2,1.336,3,2.096,7,0.029,8,2.946,9,3.414,10,2.486,11,1.855,12,1.7,13,0.374,14,0.332,15,0.332,17,3.385,18,0.648,19,0.61,22,2.526,23,1.336,38,0.374,39,0.253,41,0.02,42,0.02,45,2.278,94,1.237,105,2.729,116,2.526,119,2.891,125,2.891,289,2.745,296,2.526,335,2.745,418,3.406,431,2.891,432,3.445,433,2.891,434,3.445,435,3.385,436,3.445]],["title/coverage.html",[437,3.289]],["body/coverage.html",[7,0.029,15,0.199,26,1.515,27,2.857,28,1.515,39,0.286,41,0.014,42,0.014,43,1.923,44,1.352,46,1.734,65,0.366,69,1.352,78,1.515,82,1.352,85,1.02,94,0.742,101,1.113,102,1.113,103,1.02,111,1.352,115,1.515,117,1.515,127,0.938,129,1.515,131,1.515,132,1.515,154,0.916,156,1.734,157,1.734,180,1.02,189,1.352,190,1.734,191,1.515,192,1.885,202,1.352,206,1.02,209,1.02,226,1.515,227,1.885,228,1.221,230,1.734,255,1.515,256,1.734,257,2.339,268,1.515,279,1.734,280,1.734,289,1.02,290,1.734,291,1.734,304,1.515,305,1.734,306,1.515,318,1.515,324,1.734,325,1.734,335,1.02,336,1.734,337,1.734,344,1.734,345,2.339,347,1.515,350,1.734,373,1.734,374,1.515,376,1.734,386,1.734,402,1.352,404,1.734,406,1.734,418,1.352,419,1.734,435,1.515,437,1.515,438,1.734,439,2.066,440,2.066,441,4.738,442,6.174,443,6.579,444,6.335,445,1.734,446,1.734,447,1.734,448,1.734,449,1.734,450,2.066,451,1.734,452,1.734,453,1.734,454,5.974,455,1.734,456,1.734,457,1.734,458,1.734,459,1.734,460,3.269,461,1.734,462,2.066]],["title/dependencies.html",[3,1.801,463,2.322]],["body/dependencies.html",[3,1.706,7,0.03,19,0.666,21,3.153,23,1.456,29,1.25,41,0.022,42,0.022,77,2.632,108,2.023,110,2.755,139,3.153,359,3.984,360,2.755,381,2.755,464,3.757,465,4.887,466,5.753,467,3.757,468,3.757,469,3.757,470,3.757,471,3.757,472,3.757,473,3.757,474,3.153,475,3.757,476,3.757,477,3.757,478,3.757,479,3.757,480,3.757,481,3.757,482,3.757,483,3.757,484,3.757,485,3.757,486,3.757,487,3.757,488,3.757,489,3.757]],["title/miscellaneous/functions.html",[490,1.49,491,3.327]],["body/miscellaneous/functions.html",[7,0.026,41,0.026,42,0.026,49,0.803,451,4.155,453,5.159,490,2.667,491,4.155,492,4.951]],["title/index.html",[49,0.449,493,2.322,494,2.322]],["body/index.html",[7,0.029,14,0.309,41,0.019,42,0.019,161,1.582,193,2.35,437,2.35,474,2.689,495,4.395,496,4.395,497,3.204,498,3.204,499,3.204,500,4.395,501,3.204,502,3.204,503,3.204,504,3.204,505,3.204,506,4.395,507,3.204,508,3.204,509,3.204,510,3.204,511,3.204,512,2.689,513,5.016,514,3.204,515,3.204,516,3.204,517,5.982,518,3.204,519,3.204,520,3.204,521,5.841,522,3.204,523,3.204,524,4.395,525,3.204,526,3.204,527,3.204,528,3.204,529,4.395,530,4.395,531,3.204,532,3.204,533,3.204,534,3.688,535,4.395,536,3.204,537,3.204,538,3.204,539,3.204,540,3.204,541,2.689,542,3.204,543,3.204,544,3.204,545,3.204,546,3.204,547,3.204,548,3.204,549,3.204,550,3.204,551,2.689,552,3.204,553,3.204,554,3.204,555,3.204,556,3.204,557,3.204,558,2.097]],["title/license.html",[493,2.322,494,2.322,558,1.81]],["body/license.html",[7,0.02,12,1.648,41,0.02,42,0.02,77,1.799,438,2.803,534,2.803,558,2.185,559,5.124,560,3.339,561,3.339,562,3.339,563,3.339,564,4.52,565,3.339,566,3.339,567,3.339,568,3.339,569,3.339,570,3.339,571,4.52,572,6.234,573,3.339,574,3.339,575,3.339,576,5.124,577,3.339,578,4.52,579,3.339,580,3.339,581,4.52,582,3.339,583,3.339,584,3.339,585,3.339,586,3.339,587,3.339,588,3.339,589,4.52,590,3.339,591,3.339,592,3.339,593,3.339,594,3.339,595,3.339,596,3.339,597,4.52,598,4.52,599,3.339,600,3.339,601,3.339,602,3.339,603,3.339,604,3.339,605,3.339,606,3.339,607,3.339,608,3.339,609,3.339,610,3.339,611,3.339,612,3.339,613,3.339,614,3.339,615,3.339,616,3.339,617,3.339,618,3.339,619,3.339,620,3.339,621,3.339,622,3.339,623,3.339,624,3.339,625,3.339,626,3.339,627,3.339]],["title/modules.html",[2,1.739]],["body/modules.html",[1,2.88,2,1.706,6,2.602,7,0.024,8,2.172,9,2.37,41,0.024,42,0.024,221,2.88,316,3.228,541,5.25,628,6.255,629,6.255,630,6.367,631,4.401,632,4.401]],["title/overview.html",[633,3.764]],["body/overview.html",[1,3.941,2,1.186,3,1.933,4,2.567,5,2.567,6,3.807,7,0.029,8,2.842,9,3.337,10,2.292,11,1.647,12,1.51,41,0.019,42,0.019,45,1.51,85,2.415,98,2.567,100,2.567,101,2.636,102,2.636,103,2.415,127,2.403,128,2.001,155,1.098,206,2.415,209,2.415,221,3.767,222,2.567,223,2.567,229,2.001,289,2.415,320,2.567,321,2.567,335,2.415,402,2.001,431,2.567,433,2.567,633,2.567,634,3.058,635,4.255,636,3.058,637,3.058,638,3.058]],["title/properties.html",[130,2.135,463,2.322]],["body/properties.html",[7,0.029,41,0.025,42,0.025,130,2.622,512,4.085,551,4.085,558,3.185,639,4.868,640,4.868,641,4.868]],["title/miscellaneous/typealiases.html",[490,1.49,642,3.964]],["body/miscellaneous/typealiases.html",[7,0.022,41,0.022,42,0.022,49,0.612,55,3.594,65,1.119,129,2.767,133,4.113,137,4.113,140,4.113,142,4.113,195,3.594,293,3.594,389,4.113,391,4.113,452,4.113,490,2.032,643,3.773,644,5.763,645,4.901,646,4.901,647,6.121,648,3.773,649,3.773,650,3.773,651,4.901,652,6.232,653,3.773,654,3.773,655,3.773,656,3.773,657,3.773]],["title/miscellaneous/variables.html",[490,1.49,658,3.327]],["body/miscellaneous/variables.html",[2,0.822,7,0.03,26,2.387,27,1.556,28,2.387,41,0.014,42,0.014,49,0.344,51,0.562,60,0.889,64,0.521,65,1.091,85,1.047,101,1.142,102,1.142,103,1.047,111,2.13,115,2.387,117,2.387,131,2.904,132,2.904,134,4.081,135,5.204,141,2.384,151,0.822,180,1.606,206,1.047,209,1.047,226,2.387,229,1.388,289,1.047,318,2.387,335,1.047,347,2.387,360,1.556,371,1.78,374,2.387,381,1.556,435,2.387,441,1.78,445,3.728,446,3.324,447,3.324,448,3.324,449,3.324,455,1.78,456,1.78,457,1.78,458,1.78,459,1.78,460,3.728,461,3.324,490,1.142,658,1.78,659,4.442,660,5.686,661,3.96,662,2.121,663,2.121,664,2.121,665,2.121,666,2.121,667,2.121,668,2.121,669,2.121,670,2.121,671,2.121,672,2.121,673,2.121,674,2.121,675,2.121,676,3.96,677,3.96,678,2.121,679,3.255,680,2.121,681,2.121,682,2.121,683,2.121,684,2.121,685,2.121]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/BCryptProvider.html":{},"injectables/ChangePasswordService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"entities/Company.html":{},"classes/CreateCompaniesTable1672866368425.html":{},"injectables/CreateCompanyService.html":{},"injectables/CreateUserService.html":{},"classes/CreateUsersTable1672782049384.html":{},"modules/DatabaseModule.html":{},"modules/EncriptationModule.html":{},"injectables/FindCompaniesService.html":{},"injectables/FindUsersService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"interfaces/RequestWithUser.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":443,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":640,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["0.3.11",{"_index":489,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":479,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":444,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":450,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":454,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":638,"title":{},"body":{"overview.html":{}}}],["1.0.0",{"_index":481,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":637,"title":{},"body":{"overview.html":{}}}],["10.0.1",{"_index":470,"title":{},"body":{"dependencies.html":{}}}],["10.1.7",{"_index":465,"title":{},"body":{"dependencies.html":{}}}],["10h",{"_index":124,"title":{},"body":{"modules/AuthModule.html":{}}}],["16.6.0",{"_index":478,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":636,"title":{},"body":{"overview.html":{}}}],["2.2.0",{"_index":467,"title":{},"body":{"dependencies.html":{}}}],["2023",{"_index":561,"title":{},"body":{"license.html":{}}}],["3",{"_index":635,"title":{},"body":{"overview.html":{}}}],["3.11.1",{"_index":475,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":480,"title":{},"body":{"dependencies.html":{}}}],["5.1.0",{"_index":476,"title":{},"body":{"dependencies.html":{}}}],["5432",{"_index":670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":634,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":488,"title":{},"body":{"dependencies.html":{}}}],["8.8.0",{"_index":483,"title":{},"body":{"dependencies.html":{}}}],["8aa0f4635a4e4e982cd3c7e03c70a950",{"_index":663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.0.0",{"_index":466,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":472,"title":{},"body":{"dependencies.html":{}}}],["_eq",{"_index":231,"title":{},"body":{"entities/Company.html":{},"classes/CreateCompaniesTable1672866368425.html":{},"classes/CreateUsersTable1672782049384.html":{},"entities/User.html":{}}}],["above",{"_index":596,"title":{},"body":{"license.html":{}}}],["access_level",{"_index":314,"title":{},"body":{"classes/CreateUsersTable1672782049384.html":{},"entities/User.html":{}}}],["accesslevel",{"_index":299,"title":{},"body":{"injectables/CreateUserService.html":{},"injectables/FindUsersService.html":{},"entities/User.html":{}}}],["accesstoken",{"_index":400,"title":{},"body":{"injectables/LoginService.html":{}}}],["action",{"_index":621,"title":{},"body":{"license.html":{}}}],["aliases",{"_index":643,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amazing",{"_index":542,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":587,"title":{},"body":{"license.html":{}}}],["api",{"_index":496,"title":{},"body":{"index.html":{}}}],["apollo",{"_index":473,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":519,"title":{},"body":{"index.html":{}}}],["applications",{"_index":511,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["arising",{"_index":625,"title":{},"body":{"license.html":{}}}],["associated",{"_index":573,"title":{},"body":{"license.html":{}}}],["async",{"_index":51,"title":{},"body":{"controllers/AuthController.html":{},"classes/BCryptProvider.html":{},"injectables/ChangePasswordService.html":{},"controllers/CompaniesController.html":{},"classes/CreateCompaniesTable1672866368425.html":{},"injectables/CreateCompanyService.html":{},"injectables/CreateUserService.html":{},"classes/CreateUsersTable1672782049384.html":{},"injectables/FindCompaniesService.html":{},"injectables/FindUsersService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":48,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":114,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{}}}],["auth.guard.ts",{"_index":345,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth/guards/jwt",{"_index":203,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["authcontroller",{"_index":44,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":346,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard(jwt_strategy",{"_index":349,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard(local_strategy",{"_index":375,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":6,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":551,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authors",{"_index":614,"title":{},"body":{"license.html":{}}}],["authservices",{"_index":115,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authstrategies",{"_index":117,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["available",{"_index":632,"title":{},"body":{"modules.html":{}}}],["await",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"classes/BCryptProvider.html":{},"injectables/ChangePasswordService.html":{},"controllers/CompaniesController.html":{},"classes/CreateCompaniesTable1672866368425.html":{},"injectables/CreateCompanyService.html":{},"injectables/CreateUserService.html":{},"classes/CreateUsersTable1672782049384.html":{},"injectables/FindCompaniesService.html":{},"injectables/FindUsersService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"controllers/UsersController.html":{}}}],["backers",{"_index":543,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":139,"title":{},"body":{"classes/BCryptProvider.html":{},"dependencies.html":{}}}],["bcrypt.compare(typedpassword",{"_index":153,"title":{},"body":{"classes/BCryptProvider.html":{}}}],["bcrypt.gensalt",{"_index":148,"title":{},"body":{"classes/BCryptProvider.html":{}}}],["bcrypt.hash(password",{"_index":150,"title":{},"body":{"classes/BCryptProvider.html":{}}}],["bcrypt.provider",{"_index":323,"title":{},"body":{"modules/EncriptationModule.html":{}}}],["bcryptprovider",{"_index":127,"title":{"classes/BCryptProvider.html":{}},"body":{"classes/BCryptProvider.html":{},"injectables/ChangePasswordService.html":{},"injectables/CreateUserService.html":{},"modules/EncriptationModule.html":{},"injectables/LoginService.html":{},"coverage.html":{},"overview.html":{}}}],["blackelephant",{"_index":501,"title":{},"body":{"index.html":{}}}],["body",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/UsersController.html":{}}}],["bootstrap",{"_index":453,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":630,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":628,"title":{},"body":{"modules.html":{}}}],["building",{"_index":507,"title":{},"body":{"index.html":{}}}],["c",{"_index":560,"title":{},"body":{"license.html":{}}}],["catch",{"_index":177,"title":{},"body":{"injectables/ChangePasswordService.html":{},"injectables/CreateCompanyService.html":{},"injectables/LoginService.html":{}}}],["changepassword",{"_index":52,"title":{},"body":{"controllers/AuthController.html":{}}}],["changepassword(newpassworddto",{"_index":54,"title":{},"body":{"controllers/AuthController.html":{}}}],["changepasswordservice",{"_index":85,"title":{"injectables/ChangePasswordService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/ChangePasswordService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["charge",{"_index":568,"title":{},"body":{"license.html":{}}}],["claim",{"_index":617,"title":{},"body":{"license.html":{}}}],["class",{"_index":39,"title":{"classes/BCryptProvider.html":{},"classes/CreateCompaniesTable1672866368425.html":{},"classes/CreateUsersTable1672782049384.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/BCryptProvider.html":{},"injectables/ChangePasswordService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"entities/Company.html":{},"classes/CreateCompaniesTable1672866368425.html":{},"injectables/CreateCompanyService.html":{},"injectables/CreateUserService.html":{},"classes/CreateUsersTable1672782049384.html":{},"modules/DatabaseModule.html":{},"modules/EncriptationModule.html":{},"injectables/FindCompaniesService.html":{},"injectables/FindUsersService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["classes",{"_index":128,"title":{},"body":{"classes/BCryptProvider.html":{},"classes/CreateCompaniesTable1672866368425.html":{},"classes/CreateUsersTable1672782049384.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":98,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":99,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":100,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_companiesmodule",{"_index":222,"title":{},"body":{"modules/CompaniesModule.html":{},"overview.html":{}}}],["cluster_companiesmodule_providers",{"_index":223,"title":{},"body":{"modules/CompaniesModule.html":{},"overview.html":{}}}],["cluster_encriptationmodule",{"_index":320,"title":{},"body":{"modules/EncriptationModule.html":{},"overview.html":{}}}],["cluster_encriptationmodule_exports",{"_index":321,"title":{},"body":{"modules/EncriptationModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":431,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":432,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":433,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cnpj",{"_index":232,"title":{},"body":{"entities/Company.html":{},"classes/CreateCompaniesTable1672866368425.html":{},"injectables/CreateCompanyService.html":{}}}],["column",{"_index":239,"title":{},"body":{"entities/Company.html":{},"entities/User.html":{}}}],["column({name",{"_index":408,"title":{},"body":{"entities/User.html":{}}}],["columns",{"_index":270,"title":{},"body":{"classes/CreateCompaniesTable1672866368425.html":{},"classes/CreateUsersTable1672782049384.html":{}}}],["companies",{"_index":191,"title":{},"body":{"controllers/CompaniesController.html":{},"classes/CreateCompaniesTable1672866368425.html":{},"coverage.html":{}}}],["companies.controller",{"_index":225,"title":{},"body":{"modules/CompaniesModule.html":{}}}],["companies.entity",{"_index":285,"title":{},"body":{"injectables/CreateCompanyService.html":{},"injectables/FindCompaniesService.html":{}}}],["companies.service",{"_index":211,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["companies.service.ts",{"_index":325,"title":{},"body":{"injectables/FindCompaniesService.html":{},"coverage.html":{}}}],["companies.service.ts:13",{"_index":328,"title":{},"body":{"injectables/FindCompaniesService.html":{}}}],["companies.service.ts:7",{"_index":326,"title":{},"body":{"injectables/FindCompaniesService.html":{}}}],["companiescontroller",{"_index":189,"title":{"controllers/CompaniesController.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"coverage.html":{}}}],["companiesmodule",{"_index":221,"title":{"modules/CompaniesModule.html":{}},"body":{"modules/CompaniesModule.html":{},"modules.html":{},"overview.html":{}}}],["companiesrepository",{"_index":283,"title":{},"body":{"injectables/CreateCompanyService.html":{},"injectables/FindCompaniesService.html":{}}}],["companiesservices",{"_index":226,"title":{},"body":{"modules/CompaniesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["company",{"_index":228,"title":{"entities/Company.html":{}},"body":{"entities/Company.html":{},"injectables/CreateCompanyService.html":{},"injectables/FindCompaniesService.html":{},"coverage.html":{}}}],["company.dto",{"_index":205,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CreateCompanyService.html":{}}}],["company.dto.ts",{"_index":646,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["company.service",{"_index":208,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["company.service.ts",{"_index":280,"title":{},"body":{"injectables/CreateCompanyService.html":{},"coverage.html":{}}}],["company.service.ts:14",{"_index":284,"title":{},"body":{"injectables/CreateCompanyService.html":{}}}],["company.service.ts:8",{"_index":282,"title":{},"body":{"injectables/CreateCompanyService.html":{}}}],["compare",{"_index":131,"title":{},"body":{"classes/BCryptProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["comparedto",{"_index":142,"title":{},"body":{"classes/BCryptProvider.html":{},"miscellaneous/typealiases.html":{}}}],["comparehash",{"_index":133,"title":{},"body":{"classes/BCryptProvider.html":{},"miscellaneous/typealiases.html":{}}}],["conditions",{"_index":595,"title":{},"body":{"license.html":{}}}],["configmodule",{"_index":20,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":461,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configservice.get(postgres_database",{"_index":674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get(postgres_password",{"_index":672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get(postgres_port",{"_index":669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get(postgres_username",{"_index":671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration",{"_index":24,"title":{},"body":{"modules/AppModule.html":{}}}],["connection",{"_index":626,"title":{},"body":{"license.html":{}}}],["const",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"classes/BCryptProvider.html":{},"injectables/ChangePasswordService.html":{},"controllers/CompaniesController.html":{},"injectables/CreateUserService.html":{},"injectables/FindCompaniesService.html":{},"injectables/FindUsersService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"controllers/UsersController.html":{}}}],["constructor",{"_index":159,"title":{},"body":{"injectables/ChangePasswordService.html":{},"controllers/CompaniesController.html":{},"injectables/CreateCompanyService.html":{},"injectables/CreateUserService.html":{},"injectables/FindCompaniesService.html":{},"injectables/FindUsersService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"controllers/UsersController.html":{}}}],["constructor(companiesrepository",{"_index":281,"title":{},"body":{"injectables/CreateCompanyService.html":{},"injectables/FindCompaniesService.html":{}}}],["constructor(loginservice",{"_index":377,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(private",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{}}}],["constructor(usersrepository",{"_index":160,"title":{},"body":{"injectables/ChangePasswordService.html":{},"injectables/CreateUserService.html":{},"injectables/FindUsersService.html":{},"injectables/LoginService.html":{}}}],["contract",{"_index":622,"title":{},"body":{"license.html":{}}}],["controller",{"_index":43,"title":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('companies",{"_index":212,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["controller('users",{"_index":425,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":45,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["copies",{"_index":589,"title":{},"body":{"license.html":{}}}],["copy",{"_index":571,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":559,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":437,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":192,"title":{},"body":{"controllers/CompaniesController.html":{},"classes/CreateCompaniesTable1672866368425.html":{},"classes/CreateUsersTable1672782049384.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["create(@body",{"_index":426,"title":{},"body":{"controllers/UsersController.html":{}}}],["create(createcompanydto",{"_index":194,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["create(createuserdto",{"_index":420,"title":{},"body":{"controllers/UsersController.html":{}}}],["createcompaniestable1672866368425",{"_index":255,"title":{"classes/CreateCompaniesTable1672866368425.html":{}},"body":{"classes/CreateCompaniesTable1672866368425.html":{},"coverage.html":{}}}],["createcompanydto",{"_index":195,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CreateCompanyService.html":{},"miscellaneous/typealiases.html":{}}}],["createcompanyservice",{"_index":206,"title":{"injectables/CreateCompanyService.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CreateCompanyService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["created_at",{"_index":243,"title":{},"body":{"entities/Company.html":{},"classes/CreateCompaniesTable1672866368425.html":{},"classes/CreateUsersTable1672782049384.html":{},"entities/User.html":{}}}],["createdat",{"_index":233,"title":{},"body":{"entities/Company.html":{},"entities/User.html":{}}}],["createdatecolumn",{"_index":251,"title":{},"body":{"entities/Company.html":{},"entities/User.html":{}}}],["createdatecolumn({name",{"_index":242,"title":{},"body":{"entities/Company.html":{},"entities/User.html":{}}}],["createdcompany",{"_index":215,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["createduser",{"_index":300,"title":{},"body":{"injectables/CreateUserService.html":{},"controllers/UsersController.html":{}}}],["createduser.password",{"_index":303,"title":{},"body":{"injectables/CreateUserService.html":{}}}],["createuserdto",{"_index":293,"title":{},"body":{"injectables/CreateUserService.html":{},"controllers/UsersController.html":{},"miscellaneous/typealiases.html":{}}}],["createuserservice",{"_index":289,"title":{"injectables/CreateUserService.html":{}},"body":{"injectables/CreateUserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["createuserstable1672782049384",{"_index":304,"title":{"classes/CreateUsersTable1672782049384.html":{}},"body":{"classes/CreateUsersTable1672782049384.html":{},"coverage.html":{}}}],["damages",{"_index":618,"title":{},"body":{"license.html":{}}}],["data",{"_index":145,"title":{},"body":{"classes/BCryptProvider.html":{}}}],["data_source",{"_index":445,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database.provider",{"_index":319,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["databaseconfigurations",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["databasemodule",{"_index":316,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/DatabaseModule.html":{},"modules.html":{}}}],["databaseproviders",{"_index":318,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["datasource",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["datasource(databaseconfigurations",{"_index":682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.initialize",{"_index":685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.ts",{"_index":460,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["datasourceoptions",{"_index":664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":241,"title":{},"body":{"entities/Company.html":{},"entities/User.html":{}}}],["deal",{"_index":575,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":627,"title":{},"body":{"license.html":{}}}],["decorators",{"_index":58,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"entities/Company.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":134,"title":{},"body":{"classes/BCryptProvider.html":{},"classes/CreateCompaniesTable1672866368425.html":{},"classes/CreateUsersTable1672782049384.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":61,"title":{},"body":{"controllers/AuthController.html":{},"classes/BCryptProvider.html":{},"injectables/ChangePasswordService.html":{},"controllers/CompaniesController.html":{},"entities/Company.html":{},"classes/CreateCompaniesTable1672866368425.html":{},"injectables/CreateCompanyService.html":{},"injectables/CreateUserService.html":{},"classes/CreateUsersTable1672782049384.html":{},"injectables/FindCompaniesService.html":{},"injectables/FindUsersService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["delete",{"_index":188,"title":{},"body":{"injectables/ChangePasswordService.html":{},"injectables/CreateUserService.html":{},"injectables/FindUsersService.html":{},"injectables/LoginService.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/EncriptationModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":512,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":520,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":585,"title":{},"body":{"license.html":{}}}],["dm11",{"_index":503,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":438,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["down",{"_index":261,"title":{},"body":{"classes/CreateCompaniesTable1672866368425.html":{},"classes/CreateUsersTable1672782049384.html":{}}}],["down(queryrunner",{"_index":263,"title":{},"body":{"classes/CreateCompaniesTable1672866368425.html":{},"classes/CreateUsersTable1672782049384.html":{}}}],["dtos/create",{"_index":204,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CreateCompanyService.html":{},"injectables/CreateUserService.html":{},"controllers/UsersController.html":{}}}],["dtos/logged",{"_index":392,"title":{},"body":{"injectables/LoginService.html":{}}}],["dtos/login",{"_index":393,"title":{},"body":{"injectables/LoginService.html":{}}}],["dtos/new",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ChangePasswordService.html":{}}}],["e",{"_index":178,"title":{},"body":{"injectables/ChangePasswordService.html":{},"injectables/CreateCompanyService.html":{},"injectables/LoginService.html":{}}}],["e2e",{"_index":531,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":508,"title":{},"body":{"index.html":{}}}],["email",{"_index":173,"title":{},"body":{"injectables/ChangePasswordService.html":{},"injectables/CreateUserService.html":{},"classes/CreateUsersTable1672782049384.html":{},"injectables/FindUsersService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"entities/User.html":{}}}],["empresa",{"_index":500,"title":{},"body":{"index.html":{}}}],["encriptationmodule",{"_index":8,"title":{"modules/EncriptationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EncriptationModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["entities",{"_index":229,"title":{},"body":{"entities/Company.html":{},"entities/User.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entity",{"_index":227,"title":{"entities/Company.html":{},"entities/User.html":{}},"body":{"entities/Company.html":{},"entities/User.html":{},"coverage.html":{}}}],["entity('companies",{"_index":254,"title":{},"body":{"entities/Company.html":{}}}],["entity('users",{"_index":417,"title":{},"body":{"entities/User.html":{}}}],["entity{.ts,.js",{"_index":678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error('oops",{"_index":394,"title":{},"body":{"injectables/LoginService.html":{}}}],["error('passwords",{"_index":183,"title":{},"body":{"injectables/ChangePasswordService.html":{}}}],["error('user",{"_index":181,"title":{},"body":{"injectables/ChangePasswordService.html":{}}}],["event",{"_index":613,"title":{},"body":{"license.html":{}}}],["execute",{"_index":158,"title":{},"body":{"injectables/ChangePasswordService.html":{},"injectables/CreateCompanyService.html":{},"injectables/CreateUserService.html":{},"injectables/FindCompaniesService.html":{},"injectables/FindUsersService.html":{},"injectables/LoginService.html":{}}}],["execute(query",{"_index":327,"title":{},"body":{"injectables/FindCompaniesService.html":{},"injectables/FindUsersService.html":{}}}],["execute(undefined",{"_index":165,"title":{},"body":{"injectables/ChangePasswordService.html":{},"injectables/CreateCompanyService.html":{},"injectables/CreateUserService.html":{},"injectables/LoginService.html":{}}}],["exists",{"_index":310,"title":{},"body":{"classes/CreateUsersTable1672782049384.html":{}}}],["expiresin",{"_index":123,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/BCryptProvider.html":{},"injectables/ChangePasswordService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"entities/Company.html":{},"classes/CreateCompaniesTable1672866368425.html":{},"injectables/CreateCompanyService.html":{},"injectables/CreateUserService.html":{},"classes/CreateUsersTable1672782049384.html":{},"modules/DatabaseModule.html":{},"modules/EncriptationModule.html":{},"injectables/FindCompaniesService.html":{},"injectables/FindUsersService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"interfaces/RequestWithUser.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["exports",{"_index":126,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/EncriptationModule.html":{}}}],["express",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"interfaces/RequestWithUser.html":{},"controllers/UsersController.html":{},"dependencies.html":{},"license.html":{}}}],["extends",{"_index":348,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/RequestWithUser.html":{}}}],["extension",{"_index":309,"title":{},"body":{"classes/CreateUsersTable1672782049384.html":{}}}],["extractjwt",{"_index":357,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":365,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":367,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["feito",{"_index":498,"title":{},"body":{"index.html":{}}}],["file",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/BCryptProvider.html":{},"injectables/ChangePasswordService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"entities/Company.html":{},"classes/CreateCompaniesTable1672866368425.html":{},"injectables/CreateCompanyService.html":{},"injectables/CreateUserService.html":{},"classes/CreateUsersTable1672782049384.html":{},"modules/DatabaseModule.html":{},"modules/EncriptationModule.html":{},"injectables/FindCompaniesService.html":{},"injectables/FindUsersService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"interfaces/RequestWithUser.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["files",{"_index":574,"title":{},"body":{"license.html":{}}}],["findcompanies",{"_index":332,"title":{},"body":{"injectables/FindCompaniesService.html":{}}}],["findcompaniesservice",{"_index":209,"title":{"injectables/FindCompaniesService.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/FindCompaniesService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["findusers",{"_index":340,"title":{},"body":{"injectables/FindUsersService.html":{}}}],["findusers.foreach((u",{"_index":342,"title":{},"body":{"injectables/FindUsersService.html":{}}}],["findusersservice",{"_index":335,"title":{"injectables/FindUsersService.html":{}},"body":{"injectables/FindUsersService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["fitness",{"_index":609,"title":{},"body":{"license.html":{}}}],["following",{"_index":594,"title":{},"body":{"license.html":{}}}],["found",{"_index":182,"title":{},"body":{"injectables/ChangePasswordService.html":{}}}],["framework",{"_index":506,"title":{},"body":{"index.html":{}}}],["free",{"_index":567,"title":{},"body":{"license.html":{}}}],["function",{"_index":452,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":491,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":592,"title":{},"body":{"license.html":{}}}],["generatehash",{"_index":137,"title":{},"body":{"classes/BCryptProvider.html":{},"miscellaneous/typealiases.html":{}}}],["generationstrategy",{"_index":273,"title":{},"body":{"classes/CreateCompaniesTable1672866368425.html":{},"classes/CreateUsersTable1672782049384.html":{}}}],["getting",{"_index":493,"title":{"index.html":{},"license.html":{}},"body":{}}],["granted",{"_index":566,"title":{},"body":{"license.html":{}}}],["graph",{"_index":631,"title":{},"body":{"modules.html":{}}}],["graphql",{"_index":477,"title":{},"body":{"dependencies.html":{}}}],["grow",{"_index":538,"title":{},"body":{"index.html":{}}}],["guards/local",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{}}}],["guilherme",{"_index":562,"title":{},"body":{"license.html":{}}}],["hash",{"_index":132,"title":{},"body":{"classes/BCryptProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hashdto",{"_index":140,"title":{},"body":{"classes/BCryptProvider.html":{},"miscellaneous/typealiases.html":{}}}],["hashedpassword",{"_index":149,"title":{},"body":{"classes/BCryptProvider.html":{},"injectables/ChangePasswordService.html":{},"injectables/CreateUserService.html":{}}}],["hashprovider",{"_index":162,"title":{},"body":{"injectables/ChangePasswordService.html":{},"injectables/CreateUserService.html":{},"injectables/LoginService.html":{}}}],["here",{"_index":548,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":565,"title":{},"body":{"license.html":{}}}],["holders",{"_index":615,"title":{},"body":{"license.html":{}}}],["host",{"_index":666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://nestjs.com",{"_index":555,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/UsersController.html":{}}}],["identifier",{"_index":439,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":366,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ilike",{"_index":330,"title":{},"body":{"injectables/FindCompaniesService.html":{},"injectables/FindUsersService.html":{}}}],["ilike(resolvedquery",{"_index":334,"title":{},"body":{"injectables/FindCompaniesService.html":{},"injectables/FindUsersService.html":{}}}],["implements",{"_index":258,"title":{},"body":{"classes/CreateCompaniesTable1672866368425.html":{},"classes/CreateUsersTable1672782049384.html":{}}}],["implied",{"_index":605,"title":{},"body":{"license.html":{}}}],["import",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/BCryptProvider.html":{},"injectables/ChangePasswordService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"entities/Company.html":{},"classes/CreateCompaniesTable1672866368425.html":{},"injectables/CreateCompanyService.html":{},"injectables/CreateUserService.html":{},"classes/CreateUsersTable1672782049384.html":{},"modules/DatabaseModule.html":{},"modules/EncriptationModule.html":{},"injectables/FindCompaniesService.html":{},"injectables/FindUsersService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"interfaces/RequestWithUser.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["imports",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["included",{"_index":599,"title":{},"body":{"license.html":{}}}],["including",{"_index":578,"title":{},"body":{"license.html":{}}}],["index",{"_index":49,"title":{"index.html":{}},"body":{"controllers/AuthController.html":{},"classes/BCryptProvider.html":{},"injectables/ChangePasswordService.html":{},"controllers/CompaniesController.html":{},"entities/Company.html":{},"classes/CreateCompaniesTable1672866368425.html":{},"injectables/CreateCompanyService.html":{},"injectables/CreateUserService.html":{},"classes/CreateUsersTable1672782049384.html":{},"injectables/FindCompaniesService.html":{},"injectables/FindUsersService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"interfaces/RequestWithUser.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/BCryptProvider.html":{},"injectables/ChangePasswordService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"entities/Company.html":{},"classes/CreateCompaniesTable1672866368425.html":{},"injectables/CreateCompanyService.html":{},"injectables/CreateUserService.html":{},"classes/CreateUsersTable1672782049384.html":{},"modules/DatabaseModule.html":{},"modules/EncriptationModule.html":{},"injectables/FindCompaniesService.html":{},"injectables/FindUsersService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"interfaces/RequestWithUser.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["injectable",{"_index":154,"title":{"injectables/ChangePasswordService.html":{},"injectables/CreateCompanyService.html":{},"injectables/CreateUserService.html":{},"injectables/FindCompaniesService.html":{},"injectables/FindUsersService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{}},"body":{"injectables/ChangePasswordService.html":{},"injectables/CreateCompanyService.html":{},"injectables/CreateUserService.html":{},"injectables/FindCompaniesService.html":{},"injectables/FindUsersService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"coverage.html":{}}}],["injectables",{"_index":155,"title":{},"body":{"injectables/ChangePasswordService.html":{},"injectables/CreateCompanyService.html":{},"injectables/CreateUserService.html":{},"injectables/FindCompaniesService.html":{},"injectables/FindUsersService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"overview.html":{}}}],["injectrepository",{"_index":168,"title":{},"body":{"injectables/ChangePasswordService.html":{},"injectables/CreateCompanyService.html":{},"injectables/CreateUserService.html":{},"injectables/FindCompaniesService.html":{},"injectables/FindUsersService.html":{},"injectables/LoginService.html":{}}}],["injectrepository(company",{"_index":286,"title":{},"body":{"injectables/CreateCompanyService.html":{},"injectables/FindCompaniesService.html":{}}}],["injectrepository(user",{"_index":171,"title":{},"body":{"injectables/ChangePasswordService.html":{},"injectables/CreateUserService.html":{},"injectables/FindUsersService.html":{},"injectables/LoginService.html":{}}}],["installation",{"_index":516,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":518,"title":{},"body":{"index.html":{}}}],["interface",{"_index":402,"title":{"interfaces/RequestWithUser.html":{}},"body":{"interfaces/RequestWithUser.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":403,"title":{},"body":{"interfaces/RequestWithUser.html":{}}}],["internalservererrorexception",{"_index":167,"title":{},"body":{"injectables/ChangePasswordService.html":{},"injectables/CreateCompanyService.html":{},"injectables/LoginService.html":{}}}],["isglobal",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["isprimary",{"_index":272,"title":{},"body":{"classes/CreateCompaniesTable1672866368425.html":{},"classes/CreateUsersTable1672782049384.html":{}}}],["isunique",{"_index":313,"title":{},"body":{"classes/CreateUsersTable1672782049384.html":{}}}],["join",{"_index":545,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":360,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwt_secret_key",{"_index":111,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwt_strategy",{"_index":347,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtauthguard",{"_index":202,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/CompaniesController.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":364,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":109,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":120,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":387,"title":{},"body":{"injectables/LoginService.html":{}}}],["jwtstrategy",{"_index":101,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["kamil",{"_index":552,"title":{},"body":{"index.html":{}}}],["kind",{"_index":604,"title":{},"body":{"license.html":{}}}],["liability",{"_index":619,"title":{},"body":{"license.html":{}}}],["liable",{"_index":616,"title":{},"body":{"license.html":{}}}],["license",{"_index":558,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":535,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":579,"title":{},"body":{"license.html":{}}}],["limited",{"_index":606,"title":{},"body":{"license.html":{}}}],["literal",{"_index":652,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["load",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["local",{"_index":381,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["local_strategy",{"_index":374,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["localauthguard",{"_index":82,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localhost",{"_index":667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localstrategy",{"_index":102,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["loggeduser",{"_index":384,"title":{},"body":{"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{}}}],["loggeduserdto",{"_index":391,"title":{},"body":{"injectables/LoginService.html":{},"miscellaneous/typealiases.html":{}}}],["login",{"_index":53,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(@req",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(req",{"_index":68,"title":{},"body":{"controllers/AuthController.html":{}}}],["loginservice",{"_index":103,"title":{"injectables/LoginService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["loginuserdto",{"_index":389,"title":{},"body":{"injectables/LoginService.html":{},"miscellaneous/typealiases.html":{}}}],["logo",{"_index":234,"title":{},"body":{"entities/Company.html":{},"classes/CreateCompaniesTable1672866368425.html":{},"injectables/CreateCompanyService.html":{}}}],["match",{"_index":184,"title":{},"body":{"injectables/ChangePasswordService.html":{},"injectables/LoginService.html":{}}}],["matching",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/BCryptProvider.html":{},"injectables/ChangePasswordService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"entities/Company.html":{},"classes/CreateCompaniesTable1672866368425.html":{},"injectables/CreateCompanyService.html":{},"injectables/CreateUserService.html":{},"classes/CreateUsersTable1672782049384.html":{},"modules/DatabaseModule.html":{},"modules/EncriptationModule.html":{},"injectables/FindCompaniesService.html":{},"injectables/FindUsersService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"interfaces/RequestWithUser.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":608,"title":{},"body":{"license.html":{}}}],["merge",{"_index":583,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":485,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":50,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ChangePasswordService.html":{},"controllers/CompaniesController.html":{},"classes/CreateCompaniesTable1672866368425.html":{},"injectables/CreateCompanyService.html":{},"injectables/CreateUserService.html":{},"classes/CreateUsersTable1672782049384.html":{},"injectables/FindCompaniesService.html":{},"injectables/FindUsersService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"controllers/UsersController.html":{}}}],["migrationinterface",{"_index":259,"title":{},"body":{"classes/CreateCompaniesTable1672866368425.html":{},"classes/CreateUsersTable1672782049384.html":{}}}],["migrations",{"_index":676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrationstablename",{"_index":675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":490,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":534,"title":{},"body":{"index.html":{},"license.html":{}}}],["mode",{"_index":524,"title":{},"body":{"index.html":{}}}],["modify",{"_index":582,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabaseModule.html":{},"modules/EncriptationModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabaseModule.html":{},"modules/EncriptationModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabaseModule.html":{},"modules/EncriptationModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules/auth/auth.module",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/users/users.module",{"_index":31,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":547,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":553,"title":{},"body":{"index.html":{}}}],["name",{"_index":64,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ChangePasswordService.html":{},"controllers/CompaniesController.html":{},"entities/Company.html":{},"classes/CreateCompaniesTable1672866368425.html":{},"injectables/CreateCompanyService.html":{},"injectables/CreateUserService.html":{},"classes/CreateUsersTable1672782049384.html":{},"injectables/FindCompaniesService.html":{},"injectables/FindUsersService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":513,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":557,"title":{},"body":{"index.html":{}}}],["nestjs/apollo",{"_index":464,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/ChangePasswordService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CreateCompanyService.html":{},"injectables/CreateUserService.html":{},"modules/DatabaseModule.html":{},"modules/EncriptationModule.html":{},"injectables/FindCompaniesService.html":{},"injectables/FindUsersService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":468,"title":{},"body":{"dependencies.html":{}}}],["nestjs/graphql",{"_index":469,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":110,"title":{},"body":{"modules/AuthModule.html":{},"injectables/LoginService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":108,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":471,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/ChangePasswordService.html":{},"injectables/CreateCompanyService.html":{},"injectables/CreateUserService.html":{},"injectables/FindCompaniesService.html":{},"injectables/FindUsersService.html":{},"injectables/LoginService.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["new",{"_index":180,"title":{},"body":{"injectables/ChangePasswordService.html":{},"classes/CreateCompaniesTable1672866368425.html":{},"injectables/CreateCompanyService.html":{},"classes/CreateUsersTable1672782049384.html":{},"injectables/LoginService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newpassworddto",{"_index":55,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ChangePasswordService.html":{},"miscellaneous/typealiases.html":{}}}],["node.js",{"_index":505,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":612,"title":{},"body":{"license.html":{}}}],["nosconformes",{"_index":495,"title":{},"body":{"index.html":{}}}],["notice",{"_index":597,"title":{},"body":{"license.html":{}}}],["now",{"_index":277,"title":{},"body":{"classes/CreateCompaniesTable1672866368425.html":{},"classes/CreateUsersTable1672782049384.html":{}}}],["npm",{"_index":517,"title":{},"body":{"index.html":{}}}],["obtaining",{"_index":570,"title":{},"body":{"license.html":{}}}],["office",{"_index":298,"title":{},"body":{"injectables/CreateUserService.html":{},"classes/CreateUsersTable1672782049384.html":{},"injectables/FindUsersService.html":{},"entities/User.html":{}}}],["open",{"_index":536,"title":{},"body":{"index.html":{}}}],["optional",{"_index":66,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ChangePasswordService.html":{},"controllers/CompaniesController.html":{},"classes/CreateCompaniesTable1672866368425.html":{},"injectables/CreateCompanyService.html":{},"injectables/CreateUserService.html":{},"classes/CreateUsersTable1672782049384.html":{},"injectables/FindCompaniesService.html":{},"injectables/FindUsersService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"controllers/UsersController.html":{}}}],["ossp",{"_index":311,"title":{},"body":{"classes/CreateUsersTable1672782049384.html":{}}}],["otherwise",{"_index":624,"title":{},"body":{"license.html":{}}}],["out",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/EncriptationModule.html":{},"modules/UsersModule.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":633,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":463,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["para",{"_index":502,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":63,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ChangePasswordService.html":{},"controllers/CompaniesController.html":{},"classes/CreateCompaniesTable1672866368425.html":{},"injectables/CreateCompanyService.html":{},"injectables/CreateUserService.html":{},"classes/CreateUsersTable1672782049384.html":{},"injectables/FindCompaniesService.html":{},"injectables/FindUsersService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"controllers/UsersController.html":{}}}],["particular",{"_index":610,"title":{},"body":{"license.html":{}}}],["passport",{"_index":359,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":107,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":361,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":362,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":60,"title":{},"body":{"controllers/AuthController.html":{},"classes/BCryptProvider.html":{},"injectables/ChangePasswordService.html":{},"injectables/CreateUserService.html":{},"classes/CreateUsersTable1672782049384.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["password.dto",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ChangePasswordService.html":{}}}],["password.dto.ts",{"_index":651,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["password.service",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{}}}],["password.service.ts",{"_index":157,"title":{},"body":{"injectables/ChangePasswordService.html":{},"coverage.html":{}}}],["password.service.ts:16",{"_index":166,"title":{},"body":{"injectables/ChangePasswordService.html":{}}}],["password.service.ts:9",{"_index":163,"title":{},"body":{"injectables/ChangePasswordService.html":{}}}],["passwordconfirmation",{"_index":174,"title":{},"body":{"injectables/ChangePasswordService.html":{}}}],["passwordvalidated",{"_index":395,"title":{},"body":{"injectables/LoginService.html":{}}}],["payload",{"_index":355,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LoginService.html":{}}}],["payload.sub",{"_index":370,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.username",{"_index":372,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pela",{"_index":499,"title":{},"body":{"index.html":{}}}],["permission",{"_index":564,"title":{},"body":{"license.html":{}}}],["permit",{"_index":590,"title":{},"body":{"license.html":{}}}],["person",{"_index":569,"title":{},"body":{"license.html":{}}}],["persons",{"_index":591,"title":{},"body":{"license.html":{}}}],["pg",{"_index":482,"title":{},"body":{"dependencies.html":{}}}],["please",{"_index":546,"title":{},"body":{"index.html":{}}}],["port",{"_index":668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portions",{"_index":601,"title":{},"body":{"license.html":{}}}],["post",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/UsersController.html":{}}}],["post('change",{"_index":59,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgres",{"_index":665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postgres_database",{"_index":446,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["postgres_password",{"_index":447,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["postgres_port",{"_index":448,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["postgres_username",{"_index":449,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["prefix",{"_index":47,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/UsersController.html":{}}}],["primarygeneratedcolumn",{"_index":252,"title":{},"body":{"entities/Company.html":{},"entities/User.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":237,"title":{},"body":{"entities/Company.html":{},"entities/User.html":{}}}],["private",{"_index":172,"title":{},"body":{"injectables/ChangePasswordService.html":{},"controllers/CompaniesController.html":{},"injectables/CreateCompanyService.html":{},"injectables/CreateUserService.html":{},"injectables/FindCompaniesService.html":{},"injectables/FindUsersService.html":{},"injectables/LoginService.html":{},"controllers/UsersController.html":{}}}],["production",{"_index":526,"title":{},"body":{"index.html":{}}}],["profile_picture",{"_index":312,"title":{},"body":{"classes/CreateUsersTable1672782049384.html":{},"entities/User.html":{}}}],["profilepicture",{"_index":297,"title":{},"body":{"injectables/CreateUserService.html":{},"entities/User.html":{}}}],["progressive",{"_index":504,"title":{},"body":{"index.html":{}}}],["project",{"_index":537,"title":{},"body":{"index.html":{}}}],["promise",{"_index":146,"title":{},"body":{"classes/BCryptProvider.html":{},"injectables/ChangePasswordService.html":{},"classes/CreateCompaniesTable1672866368425.html":{},"injectables/CreateCompanyService.html":{},"injectables/CreateUserService.html":{},"classes/CreateUsersTable1672782049384.html":{},"injectables/FindCompaniesService.html":{},"injectables/FindUsersService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{}}}],["properties",{"_index":130,"title":{"properties.html":{}},"body":{"classes/BCryptProvider.html":{},"entities/Company.html":{},"interfaces/RequestWithUser.html":{},"entities/User.html":{},"properties.html":{}}}],["provide",{"_index":683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":602,"title":{},"body":{"license.html":{}}}],["providers",{"_index":105,"title":{},"body":{"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabaseModule.html":{},"modules/EncriptationModule.html":{},"modules/UsersModule.html":{}}}],["providers/encriptation/encriptation.module",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":260,"title":{},"body":{"classes/CreateCompaniesTable1672866368425.html":{},"classes/CreateUsersTable1672782049384.html":{}}}],["publish",{"_index":584,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":611,"title":{},"body":{"license.html":{}}}],["query",{"_index":201,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/FindCompaniesService.html":{},"injectables/FindUsersService.html":{},"controllers/UsersController.html":{}}}],["queryrunner",{"_index":264,"title":{},"body":{"classes/CreateCompaniesTable1672866368425.html":{},"classes/CreateUsersTable1672782049384.html":{}}}],["queryrunner.createtable",{"_index":269,"title":{},"body":{"classes/CreateCompaniesTable1672866368425.html":{},"classes/CreateUsersTable1672782049384.html":{}}}],["queryrunner.droptable('companies",{"_index":278,"title":{},"body":{"classes/CreateCompaniesTable1672866368425.html":{}}}],["queryrunner.droptable('users",{"_index":315,"title":{},"body":{"classes/CreateUsersTable1672782049384.html":{}}}],["queryrunner.query('create",{"_index":308,"title":{},"body":{"classes/CreateUsersTable1672782049384.html":{}}}],["read",{"_index":193,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["read(@query('query",{"_index":218,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/UsersController.html":{}}}],["read(query",{"_index":198,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/UsersController.html":{}}}],["readonly",{"_index":213,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/UsersController.html":{}}}],["reflect",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":161,"title":{},"body":{"injectables/ChangePasswordService.html":{},"injectables/CreateCompanyService.html":{},"injectables/CreateUserService.html":{},"injectables/FindCompaniesService.html":{},"injectables/FindUsersService.html":{},"injectables/LoginService.html":{},"index.html":{}}}],["req",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":405,"title":{},"body":{"interfaces/RequestWithUser.html":{}}}],["requestwithuser",{"_index":69,"title":{"interfaces/RequestWithUser.html":{}},"body":{"controllers/AuthController.html":{},"interfaces/RequestWithUser.html":{},"coverage.html":{}}}],["res",{"_index":56,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/UsersController.html":{}}}],["res.json(companies).status(httpstatus.ok",{"_index":220,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["res.json(createdcompany).status(httpstatus.created",{"_index":217,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["res.json(createduser).status(httpstatus.created",{"_index":428,"title":{},"body":{"controllers/UsersController.html":{}}}],["res.json(req.user).status(httpstatus.ok",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.json(user).status(httpstatus.ok",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.json(users).status(httpstatus.ok",{"_index":430,"title":{},"body":{"controllers/UsersController.html":{}}}],["reset",{"_index":11,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/EncriptationModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resolve(__dirname",{"_index":677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resolvedquery",{"_index":331,"title":{},"body":{"injectables/FindCompaniesService.html":{},"injectables/FindUsersService.html":{}}}],["response",{"_index":57,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/UsersController.html":{}}}],["restriction",{"_index":577,"title":{},"body":{"license.html":{}}}],["results",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/BCryptProvider.html":{},"injectables/ChangePasswordService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"entities/Company.html":{},"classes/CreateCompaniesTable1672866368425.html":{},"injectables/CreateCompanyService.html":{},"injectables/CreateUserService.html":{},"classes/CreateUsersTable1672782049384.html":{},"modules/DatabaseModule.html":{},"modules/EncriptationModule.html":{},"injectables/FindCompaniesService.html":{},"injectables/FindUsersService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"interfaces/RequestWithUser.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":151,"title":{},"body":{"classes/BCryptProvider.html":{},"injectables/ChangePasswordService.html":{},"injectables/CreateCompanyService.html":{},"injectables/CreateUserService.html":{},"injectables/FindCompaniesService.html":{},"injectables/FindUsersService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":67,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ChangePasswordService.html":{},"controllers/CompaniesController.html":{},"classes/CreateCompaniesTable1672866368425.html":{},"injectables/CreateCompanyService.html":{},"injectables/CreateUserService.html":{},"classes/CreateUsersTable1672782049384.html":{},"injectables/FindCompaniesService.html":{},"injectables/FindUsersService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"controllers/UsersController.html":{}}}],["rights",{"_index":580,"title":{},"body":{"license.html":{}}}],["run",{"_index":521,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["saltorrounds",{"_index":147,"title":{},"body":{"classes/BCryptProvider.html":{}}}],["sartori",{"_index":563,"title":{},"body":{"license.html":{}}}],["scalable",{"_index":509,"title":{},"body":{"index.html":{}}}],["secret",{"_index":121,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":368,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["sell",{"_index":588,"title":{},"body":{"license.html":{}}}],["server",{"_index":474,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["services",{"_index":116,"title":{},"body":{"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/UsersModule.html":{}}}],["services/change",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{}}}],["services/create",{"_index":207,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/UsersController.html":{}}}],["services/find",{"_index":210,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/UsersController.html":{}}}],["services/login.service",{"_index":382,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["shall",{"_index":598,"title":{},"body":{"license.html":{}}}],["side",{"_index":510,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":122,"title":{},"body":{"modules/AuthModule.html":{}}}],["sistema",{"_index":497,"title":{},"body":{"index.html":{}}}],["site",{"_index":235,"title":{},"body":{"entities/Company.html":{},"classes/CreateCompaniesTable1672866368425.html":{},"injectables/CreateCompanyService.html":{}}}],["software",{"_index":572,"title":{},"body":{"license.html":{}}}],["source",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/BCryptProvider.html":{},"injectables/ChangePasswordService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"entities/Company.html":{},"classes/CreateCompaniesTable1672866368425.html":{},"injectables/CreateCompanyService.html":{},"injectables/CreateUserService.html":{},"classes/CreateUsersTable1672782049384.html":{},"modules/DatabaseModule.html":{},"modules/EncriptationModule.html":{},"injectables/FindCompaniesService.html":{},"injectables/FindUsersService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"interfaces/RequestWithUser.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"index.html":{}}}],["sponsors",{"_index":540,"title":{},"body":{"index.html":{}}}],["src/.../bcrypt.provider.ts",{"_index":644,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../constants.ts",{"_index":660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../create",{"_index":645,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../database.provider.ts",{"_index":662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../logged",{"_index":648,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../login",{"_index":649,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../main.ts",{"_index":492,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../new",{"_index":650,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../typeorm",{"_index":661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":16,"title":{},"body":{"modules/AppModule.html":{}}}],["src/config/configuration",{"_index":25,"title":{},"body":{"modules/AppModule.html":{}}}],["src/config/constants",{"_index":112,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{}}}],["src/config/constants.ts",{"_index":441,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/interfaces/request",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/RequestWithUser.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":451,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/auth/auth.controller.ts",{"_index":46,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/modules/auth/auth.controller.ts:22",{"_index":71,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:27",{"_index":62,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.module.ts",{"_index":104,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/dtos/logged",{"_index":655,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/modules/auth/dtos/login",{"_index":656,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/modules/auth/dtos/new",{"_index":657,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/modules/auth/guards/jwt",{"_index":344,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/modules/auth/guards/local",{"_index":373,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/modules/auth/services/change",{"_index":156,"title":{},"body":{"injectables/ChangePasswordService.html":{},"coverage.html":{}}}],["src/modules/auth/services/index.ts",{"_index":455,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/auth/services/login.service.ts",{"_index":386,"title":{},"body":{"injectables/LoginService.html":{},"coverage.html":{}}}],["src/modules/auth/services/login.service.ts:11",{"_index":388,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/modules/auth/services/login.service.ts:19",{"_index":390,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/modules/auth/strategies/index.ts",{"_index":456,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/auth/strategies/jwt.strategy.ts",{"_index":350,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/modules/auth/strategies/jwt.strategy.ts:16",{"_index":354,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/auth/strategies/jwt.strategy.ts:7",{"_index":352,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/auth/strategies/local.stratedy.ts",{"_index":376,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/modules/auth/strategies/local.stratedy.ts:14",{"_index":380,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/modules/auth/strategies/local.stratedy.ts:7",{"_index":378,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/modules/companies/companies.controller.ts",{"_index":190,"title":{},"body":{"controllers/CompaniesController.html":{},"coverage.html":{}}}],["src/modules/companies/companies.controller.ts:26",{"_index":197,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/modules/companies/companies.controller.ts:39",{"_index":200,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/modules/companies/companies.entity.ts",{"_index":230,"title":{},"body":{"entities/Company.html":{},"coverage.html":{}}}],["src/modules/companies/companies.entity.ts:12",{"_index":238,"title":{},"body":{"entities/Company.html":{}}}],["src/modules/companies/companies.entity.ts:15",{"_index":245,"title":{},"body":{"entities/Company.html":{}}}],["src/modules/companies/companies.entity.ts:18",{"_index":246,"title":{},"body":{"entities/Company.html":{}}}],["src/modules/companies/companies.entity.ts:21",{"_index":240,"title":{},"body":{"entities/Company.html":{}}}],["src/modules/companies/companies.entity.ts:24",{"_index":247,"title":{},"body":{"entities/Company.html":{}}}],["src/modules/companies/companies.entity.ts:27",{"_index":244,"title":{},"body":{"entities/Company.html":{}}}],["src/modules/companies/companies.entity.ts:30",{"_index":250,"title":{},"body":{"entities/Company.html":{}}}],["src/modules/companies/companies.module.ts",{"_index":224,"title":{},"body":{"modules/CompaniesModule.html":{}}}],["src/modules/companies/dtos/create",{"_index":653,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/modules/companies/services/create",{"_index":279,"title":{},"body":{"injectables/CreateCompanyService.html":{},"coverage.html":{}}}],["src/modules/companies/services/find",{"_index":324,"title":{},"body":{"injectables/FindCompaniesService.html":{},"coverage.html":{}}}],["src/modules/companies/services/index.ts",{"_index":457,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/users/dtos/create",{"_index":654,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/modules/users/services/create",{"_index":290,"title":{},"body":{"injectables/CreateUserService.html":{},"coverage.html":{}}}],["src/modules/users/services/find",{"_index":336,"title":{},"body":{"injectables/FindUsersService.html":{},"coverage.html":{}}}],["src/modules/users/services/index.ts",{"_index":458,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/users/users.controller.ts",{"_index":419,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/modules/users/users.controller.ts:23",{"_index":421,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:29",{"_index":422,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.entity",{"_index":169,"title":{},"body":{"injectables/ChangePasswordService.html":{},"injectables/LoginService.html":{},"interfaces/RequestWithUser.html":{}}}],["src/modules/users/users.entity.ts",{"_index":406,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/modules/users/users.entity.ts:12",{"_index":407,"title":{},"body":{"entities/User.html":{}}}],["src/modules/users/users.entity.ts:15",{"_index":415,"title":{},"body":{"entities/User.html":{}}}],["src/modules/users/users.entity.ts:18",{"_index":412,"title":{},"body":{"entities/User.html":{}}}],["src/modules/users/users.entity.ts:21",{"_index":411,"title":{},"body":{"entities/User.html":{}}}],["src/modules/users/users.entity.ts:24",{"_index":414,"title":{},"body":{"entities/User.html":{}}}],["src/modules/users/users.entity.ts:27",{"_index":413,"title":{},"body":{"entities/User.html":{}}}],["src/modules/users/users.entity.ts:30",{"_index":409,"title":{},"body":{"entities/User.html":{}}}],["src/modules/users/users.entity.ts:33",{"_index":410,"title":{},"body":{"entities/User.html":{}}}],["src/modules/users/users.entity.ts:36",{"_index":416,"title":{},"body":{"entities/User.html":{}}}],["src/modules/users/users.module.ts",{"_index":434,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/providers/database/database.module.ts",{"_index":317,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/providers/database/database.provider.ts",{"_index":459,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/providers/database/migrations/1672782049384",{"_index":305,"title":{},"body":{"classes/CreateUsersTable1672782049384.html":{},"coverage.html":{}}}],["src/providers/database/migrations/1672866368425",{"_index":256,"title":{},"body":{"classes/CreateCompaniesTable1672866368425.html":{},"coverage.html":{}}}],["src/providers/database/typeorm",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/providers/encriptation/bcrypt.provider",{"_index":170,"title":{},"body":{"injectables/ChangePasswordService.html":{},"injectables/CreateUserService.html":{},"injectables/LoginService.html":{}}}],["src/providers/encriptation/bcrypt.provider.ts",{"_index":129,"title":{},"body":{"classes/BCryptProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/providers/encriptation/bcrypt.provider.ts:16",{"_index":138,"title":{},"body":{"classes/BCryptProvider.html":{}}}],["src/providers/encriptation/bcrypt.provider.ts:22",{"_index":136,"title":{},"body":{"classes/BCryptProvider.html":{}}}],["src/providers/encriptation/encriptation.module",{"_index":119,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["src/providers/encriptation/encriptation.module.ts",{"_index":322,"title":{},"body":{"modules/EncriptationModule.html":{}}}],["start",{"_index":522,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":525,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":527,"title":{},"body":{"index.html":{}}}],["started",{"_index":494,"title":{"index.html":{},"license.html":{}},"body":{}}],["starter",{"_index":515,"title":{},"body":{"index.html":{}}}],["statements",{"_index":440,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":549,"title":{},"body":{"index.html":{}}}],["storedpassword",{"_index":144,"title":{},"body":{"classes/BCryptProvider.html":{},"injectables/LoginService.html":{}}}],["strategies",{"_index":118,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":358,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":141,"title":{},"body":{"classes/BCryptProvider.html":{},"controllers/CompaniesController.html":{},"entities/Company.html":{},"injectables/FindCompaniesService.html":{},"injectables/FindUsersService.html":{},"injectables/LocalStrategy.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":398,"title":{},"body":{"injectables/LoginService.html":{}}}],["subject",{"_index":593,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":586,"title":{},"body":{"license.html":{}}}],["subscriber",{"_index":681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subscribers",{"_index":680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["substantial",{"_index":600,"title":{},"body":{"license.html":{}}}],["super",{"_index":363,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["support",{"_index":541,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":629,"title":{},"body":{"modules.html":{}}}],["table",{"_index":268,"title":{},"body":{"classes/CreateCompaniesTable1672866368425.html":{},"classes/CreateUsersTable1672782049384.html":{},"coverage.html":{}}}],["table.ts",{"_index":257,"title":{},"body":{"classes/CreateCompaniesTable1672866368425.html":{},"classes/CreateUsersTable1672782049384.html":{},"coverage.html":{}}}],["table.ts:4",{"_index":267,"title":{},"body":{"classes/CreateCompaniesTable1672866368425.html":{},"classes/CreateUsersTable1672782049384.html":{}}}],["table.ts:47",{"_index":265,"title":{},"body":{"classes/CreateCompaniesTable1672866368425.html":{}}}],["table.ts:58",{"_index":307,"title":{},"body":{"classes/CreateUsersTable1672782049384.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":462,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":530,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":533,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":532,"title":{},"body":{"index.html":{}}}],["tests",{"_index":529,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":539,"title":{},"body":{"index.html":{}}}],["this.changepasswordservice.execute(newpassworddto",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.companiesrepository.create",{"_index":287,"title":{},"body":{"injectables/CreateCompanyService.html":{}}}],["this.companiesrepository.find",{"_index":333,"title":{},"body":{"injectables/FindCompaniesService.html":{}}}],["this.companiesrepository.save(company",{"_index":288,"title":{},"body":{"injectables/CreateCompanyService.html":{}}}],["this.createcompanyservice.execute",{"_index":216,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.createuserservice.execute(createuserdto",{"_index":427,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.findcompaniesservice.execute(query",{"_index":219,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.findusersservice.execute(query",{"_index":429,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.hashprovider.compare",{"_index":396,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.hashprovider.hash",{"_index":185,"title":{},"body":{"injectables/ChangePasswordService.html":{},"injectables/CreateUserService.html":{}}}],["this.jwtservice.sign(payload",{"_index":401,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.loginservice.execute",{"_index":385,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.usersrepository.create",{"_index":301,"title":{},"body":{"injectables/CreateUserService.html":{}}}],["this.usersrepository.find",{"_index":341,"title":{},"body":{"injectables/FindUsersService.html":{}}}],["this.usersrepository.findone",{"_index":176,"title":{},"body":{"injectables/ChangePasswordService.html":{},"injectables/LoginService.html":{}}}],["this.usersrepository.save(createduser",{"_index":302,"title":{},"body":{"injectables/CreateUserService.html":{}}}],["this.usersrepository.save(user",{"_index":187,"title":{},"body":{"injectables/ChangePasswordService.html":{}}}],["throw",{"_index":179,"title":{},"body":{"injectables/ChangePasswordService.html":{},"injectables/CreateCompanyService.html":{},"injectables/LoginService.html":{}}}],["timestamp",{"_index":276,"title":{},"body":{"classes/CreateCompaniesTable1672866368425.html":{},"classes/CreateUsersTable1672782049384.html":{}}}],["tort",{"_index":623,"title":{},"body":{"license.html":{}}}],["touch",{"_index":550,"title":{},"body":{"index.html":{}}}],["true",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateCompaniesTable1672866368425.html":{},"classes/CreateUsersTable1672782049384.html":{}}}],["try",{"_index":175,"title":{},"body":{"injectables/ChangePasswordService.html":{},"injectables/CreateCompanyService.html":{},"injectables/LoginService.html":{}}}],["ts,.js",{"_index":679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["twitter",{"_index":556,"title":{},"body":{"index.html":{}}}],["type",{"_index":65,"title":{},"body":{"controllers/AuthController.html":{},"classes/BCryptProvider.html":{},"injectables/ChangePasswordService.html":{},"controllers/CompaniesController.html":{},"entities/Company.html":{},"classes/CreateCompaniesTable1672866368425.html":{},"injectables/CreateCompanyService.html":{},"injectables/CreateUserService.html":{},"classes/CreateUsersTable1672782049384.html":{},"injectables/FindCompaniesService.html":{},"injectables/FindUsersService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"interfaces/RequestWithUser.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":642,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedpassword",{"_index":143,"title":{},"body":{"classes/BCryptProvider.html":{},"injectables/LoginService.html":{}}}],["typeorm",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChangePasswordService.html":{},"entities/Company.html":{},"classes/CreateCompaniesTable1672866368425.html":{},"injectables/CreateCompanyService.html":{},"injectables/CreateUserService.html":{},"classes/CreateUsersTable1672782049384.html":{},"injectables/FindCompaniesService.html":{},"injectables/FindUsersService.html":{},"injectables/LoginService.html":{},"entities/User.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":125,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forroot(databaseconfigurations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["typescript",{"_index":514,"title":{},"body":{"index.html":{}}}],["u.password",{"_index":343,"title":{},"body":{"injectables/FindUsersService.html":{}}}],["unit",{"_index":528,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":356,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["unlicensed",{"_index":641,"title":{},"body":{"properties.html":{}}}],["up",{"_index":262,"title":{},"body":{"classes/CreateCompaniesTable1672866368425.html":{},"classes/CreateUsersTable1672782049384.html":{}}}],["up(queryrunner",{"_index":266,"title":{},"body":{"classes/CreateCompaniesTable1672866368425.html":{},"classes/CreateUsersTable1672782049384.html":{}}}],["updated_at",{"_index":249,"title":{},"body":{"entities/Company.html":{},"classes/CreateCompaniesTable1672866368425.html":{},"classes/CreateUsersTable1672782049384.html":{},"entities/User.html":{}}}],["updatedat",{"_index":236,"title":{},"body":{"entities/Company.html":{},"entities/User.html":{}}}],["updatedatecolumn",{"_index":253,"title":{},"body":{"entities/Company.html":{},"entities/User.html":{}}}],["updatedatecolumn({name",{"_index":248,"title":{},"body":{"entities/Company.html":{},"entities/User.html":{}}}],["use",{"_index":581,"title":{},"body":{"license.html":{}}}],["usefactory",{"_index":684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useguards",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{}}}],["useguards(jwtauthguard",{"_index":214,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["useguards(jwtauthguard)@get",{"_index":199,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["useguards(jwtauthguard)@post",{"_index":196,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["useguards(localauthguard",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard)@post('login",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":94,"title":{"entities/User.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/ChangePasswordService.html":{},"injectables/CreateUserService.html":{},"injectables/FindUsersService.html":{},"injectables/LoginService.html":{},"interfaces/RequestWithUser.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["user._eq",{"_index":399,"title":{},"body":{"injectables/LoginService.html":{}}}],["user.dto",{"_index":295,"title":{},"body":{"injectables/CreateUserService.html":{},"injectables/LoginService.html":{},"controllers/UsersController.html":{}}}],["user.dto.ts",{"_index":647,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["user.email",{"_index":397,"title":{},"body":{"injectables/LoginService.html":{}}}],["user.interface",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.interface.ts",{"_index":404,"title":{},"body":{"interfaces/RequestWithUser.html":{},"coverage.html":{}}}],["user.password",{"_index":186,"title":{},"body":{"injectables/ChangePasswordService.html":{},"injectables/LoginService.html":{}}}],["user.service",{"_index":423,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.service.ts",{"_index":291,"title":{},"body":{"injectables/CreateUserService.html":{},"coverage.html":{}}}],["user.service.ts:16",{"_index":294,"title":{},"body":{"injectables/CreateUserService.html":{}}}],["user.service.ts:9",{"_index":292,"title":{},"body":{"injectables/CreateUserService.html":{}}}],["userid",{"_index":369,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["username",{"_index":371,"title":{},"body":{"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["usernamefield",{"_index":383,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["users",{"_index":306,"title":{},"body":{"classes/CreateUsersTable1672782049384.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["users.controller",{"_index":436,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.entity",{"_index":296,"title":{},"body":{"injectables/CreateUserService.html":{},"injectables/FindUsersService.html":{},"modules/UsersModule.html":{}}}],["users.service",{"_index":424,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.service.ts",{"_index":337,"title":{},"body":{"injectables/FindUsersService.html":{},"coverage.html":{}}}],["users.service.ts:13",{"_index":339,"title":{},"body":{"injectables/FindUsersService.html":{}}}],["users.service.ts:7",{"_index":338,"title":{},"body":{"injectables/FindUsersService.html":{}}}],["users/users.entity",{"_index":113,"title":{},"body":{"modules/AuthModule.html":{}}}],["users/users.module",{"_index":106,"title":{},"body":{"modules/AuthModule.html":{}}}],["userscontroller",{"_index":418,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":9,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersrepository",{"_index":164,"title":{},"body":{"injectables/ChangePasswordService.html":{},"injectables/CreateUserService.html":{},"injectables/FindUsersService.html":{},"injectables/LoginService.html":{}}}],["usersservices",{"_index":435,"title":{},"body":{"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uuid",{"_index":271,"title":{},"body":{"classes/CreateCompaniesTable1672866368425.html":{},"classes/CreateUsersTable1672782049384.html":{}}}],["uuid_generate_v4",{"_index":274,"title":{},"body":{"classes/CreateCompaniesTable1672866368425.html":{},"classes/CreateUsersTable1672782049384.html":{}}}],["validate",{"_index":351,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(email",{"_index":379,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":353,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validated",{"_index":152,"title":{},"body":{"classes/BCryptProvider.html":{}}}],["value",{"_index":135,"title":{},"body":{"classes/BCryptProvider.html":{},"miscellaneous/variables.html":{}}}],["varchar",{"_index":275,"title":{},"body":{"classes/CreateCompaniesTable1672866368425.html":{},"classes/CreateUsersTable1672782049384.html":{}}}],["variable",{"_index":442,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":658,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":639,"title":{},"body":{"properties.html":{}}}],["warranties",{"_index":607,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":603,"title":{},"body":{"license.html":{}}}],["watch",{"_index":523,"title":{},"body":{"index.html":{}}}],["website",{"_index":554,"title":{},"body":{"index.html":{}}}],["whether",{"_index":620,"title":{},"body":{"license.html":{}}}],["without",{"_index":576,"title":{},"body":{"license.html":{}}}],["yes",{"_index":329,"title":{},"body":{"injectables/FindCompaniesService.html":{},"injectables/FindUsersService.html":{}}}],["you'd",{"_index":544,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/EncriptationModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nEncriptationModule\n\nEncriptationModule\n\nAppModule -->\n\nEncriptationModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            EncriptationModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport configuration from 'src/config/configuration';\nimport { databaseConfigurations } from 'src/providers/database/typeorm-datasource';\nimport { DataSource } from 'typeorm';\nimport { AuthModule } from './modules/auth/auth.module';\nimport { UsersModule } from './modules/users/users.module';\nimport { EncriptationModule } from './providers/encriptation/encriptation.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot(databaseConfigurations),\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [configuration],\n    }),\n    AuthModule,\n    UsersModule,\n    EncriptationModule,\n  ],\n})\nexport class AppModule {\n  constructor(private dataSource: DataSource) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        changePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    changePassword(newPasswordDTO: NewPasswordDTO, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('change-password')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newPasswordDTO\n                                    \n                                                NewPasswordDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req: RequestWithUser, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LocalAuthGuard)@Post('login')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                RequestWithUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  UseGuards,\n  Res,\n  HttpStatus,\n  Req,\n  Body,\n} from '@nestjs/common';\nimport { Response } from 'express';\nimport { RequestWithUser } from 'src/interfaces/request-with-user.interface';\nimport { NewPasswordDTO } from './dtos/new-password.dto';\nimport { LocalAuthGuard } from './guards/local-auth.guard';\nimport { ChangePasswordService } from './services/change-password.service';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private changePasswordService: ChangePasswordService) {}\n\n  @UseGuards(LocalAuthGuard)\n  @Post('login')\n  async login(@Req() req: RequestWithUser, @Res() res: Response) {\n    res.json(req.user).status(HttpStatus.OK);\n  }\n\n  @Post('change-password')\n  async changePassword(\n    @Body() newPasswordDTO: NewPasswordDTO,\n    @Res() res: Response,\n  ) {\n    const user = await this.changePasswordService.execute(newPasswordDTO);\n\n    res.json(user).status(HttpStatus.OK);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nEncriptationModule\n\nEncriptationModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nEncriptationModule->AuthModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nChangePasswordService\n\nChangePasswordService\n\nAuthModule -->\n\nChangePasswordService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nLoginService\n\nLoginService\n\nAuthModule -->\n\nLoginService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ChangePasswordService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                        \n                            LoginService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            EncriptationModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersModule } from '../users/users.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JWT_SECRET_KEY } from 'src/config/constants';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from '../users/users.entity';\nimport { AuthController } from './auth.controller';\nimport { authServices } from './services';\nimport { authStrategies } from './strategies';\nimport { EncriptationModule } from 'src/providers/encriptation/encriptation.module';\n\n@Module({\n  imports: [\n    UsersModule,\n    PassportModule,\n    JwtModule.register({\n      secret: JWT_SECRET_KEY,\n      signOptions: { expiresIn: '10h' },\n    }),\n    TypeOrmModule.forFeature([User]),\n    EncriptationModule,\n  ],\n  providers: [...authStrategies, ...authServices],\n  controllers: [AuthController],\n  exports: [],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BCryptProvider.html":{"url":"classes/BCryptProvider.html","title":"class - BCryptProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BCryptProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/encriptation/bcrypt.provider.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                compare\n                            \n                            \n                                hash\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        compare\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompareHash\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/providers/encriptation/bcrypt.provider.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GenerateHash\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/providers/encriptation/bcrypt.provider.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import * as bcrypt from 'bcrypt';\n\ntype HashDTO = {\n  password: string;\n};\n\ntype CompareDTO = {\n  typedPassword: string;\n  storedPassword: string;\n};\n\nexport type GenerateHash = (data: HashDTO) => Promise;\nexport type CompareHash = (data: CompareDTO) => Promise;\n\nexport class BCryptProvider {\n  hash: GenerateHash = async ({ password }: HashDTO): Promise => {\n    const saltOrRounds = await bcrypt.genSalt();\n    const hashedPassword = await bcrypt.hash(password, saltOrRounds);\n    return hashedPassword;\n  };\n\n  compare: CompareHash = async ({\n    typedPassword,\n    storedPassword,\n  }: CompareDTO): Promise => {\n    const validated = await bcrypt.compare(typedPassword, storedPassword);\n\n    return validated;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChangePasswordService.html":{"url":"injectables/ChangePasswordService.html","title":"injectable - ChangePasswordService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ChangePasswordService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/services/change-password.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository, hashProvider: BCryptProvider)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/services/change-password.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hashProvider\n                                                  \n                                                        \n                                                                        BCryptProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(undefined: NewPasswordDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/services/change-password.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                NewPasswordDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, InternalServerErrorException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { User } from 'src/modules/users/users.entity';\nimport { BCryptProvider } from 'src/providers/encriptation/bcrypt.provider';\nimport { Repository } from 'typeorm';\nimport { NewPasswordDTO } from '../dtos/new-password.dto';\n\n@Injectable()\nexport class ChangePasswordService {\n  constructor(\n    @InjectRepository(User)\n    private usersRepository: Repository,\n    private hashProvider: BCryptProvider,\n  ) {}\n\n  async execute({\n    email,\n    password,\n    passwordConfirmation,\n  }: NewPasswordDTO): Promise {\n    let user: User;\n    try {\n      user = await this.usersRepository.findOne({\n        where: {\n          email,\n        },\n      });\n    } catch (e) {\n      throw new InternalServerErrorException();\n    }\n\n    if (!user) throw new Error('User not found');\n\n    if (password !== passwordConfirmation)\n      throw new Error('Passwords does not match');\n\n    const hashedPassword = await this.hashProvider.hash({\n      password,\n    });\n\n    user.password = hashedPassword;\n\n    try {\n      await this.usersRepository.save(user);\n    } catch (e) {\n      throw new InternalServerErrorException();\n    }\n\n    delete user.password;\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CompaniesController.html":{"url":"controllers/CompaniesController.html","title":"controller - CompaniesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CompaniesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/companies/companies.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                companies\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                read\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createCompanyDTO: CreateCompanyDTO, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Post()\n                \n            \n\n            \n                \n                    Defined in src/modules/companies/companies.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCompanyDTO\n                                    \n                                                CreateCompanyDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                    \n                    read(query: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/modules/companies/companies.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  HttpStatus,\n  Post,\n  Query,\n  Res,\n  UseGuards,\n} from '@nestjs/common';\nimport { Response } from 'express';\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\nimport { CreateCompanyDTO } from './dtos/create-company.dto';\nimport { CreateCompanyService } from './services/create-company.service';\nimport { FindCompaniesService } from './services/find-companies.service';\n\n@Controller('companies')\nexport class CompaniesController {\n  constructor(\n    private readonly createCompanyService: CreateCompanyService,\n    private readonly findCompaniesService: FindCompaniesService,\n  ) {}\n\n  @UseGuards(JwtAuthGuard)\n  @Post()\n  async create(\n    @Body() createCompanyDTO: CreateCompanyDTO,\n    @Res() res: Response,\n  ) {\n    const createdCompany = await this.createCompanyService.execute(\n      createCompanyDTO,\n    );\n\n    res.json(createdCompany).status(HttpStatus.CREATED);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get()\n  async read(@Query('query') query: string, @Res() res: Response) {\n    const companies = await this.findCompaniesService.execute(query);\n\n    res.json(companies).status(HttpStatus.OK);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompaniesModule.html":{"url":"modules/CompaniesModule.html","title":"module - CompaniesModule","body":"\n                   \n\n\n\n\n    Modules\n    CompaniesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CompaniesModule\n\n\n\ncluster_CompaniesModule_providers\n\n\n\n\nCreateCompanyService\n\nCreateCompanyService\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nCompaniesModule -->\n\nCreateCompanyService->CompaniesModule\n\n\n\n\n\nFindCompaniesService\n\nFindCompaniesService\n\nCompaniesModule -->\n\nFindCompaniesService->CompaniesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/companies/companies.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CreateCompanyService\n                        \n                        \n                            FindCompaniesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CompaniesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CompaniesController } from './companies.controller';\nimport { companiesServices } from './services';\n\n@Module({\n  providers: [...companiesServices],\n  controllers: [CompaniesController],\n})\nexport class CompaniesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Company.html":{"url":"entities/Company.html","title":"entity - Company","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/companies/companies.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _eq\n                            \n                            \n                                cnpj\n                            \n                            \n                                createdAt\n                            \n                            \n                                logo\n                            \n                            \n                                name\n                            \n                            \n                                site\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _eq\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/companies/companies.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cnpj\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/companies/companies.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: 'created_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/companies/companies.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/companies/companies.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/companies/companies.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        site\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/companies/companies.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: 'updated_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/companies/companies.entity.ts:30\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\n@Entity('companies')\nexport class Company {\n  @PrimaryGeneratedColumn('uuid')\n  _eq: string;\n\n  @Column()\n  logo: string;\n\n  @Column()\n  name: string;\n\n  @Column()\n  cnpj: string;\n\n  @Column()\n  site: string;\n\n  @CreateDateColumn({ name: 'created_at' })\n  createdAt: Date;\n\n  @UpdateDateColumn({ name: 'updated_at' })\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCompaniesTable1672866368425.html":{"url":"classes/CreateCompaniesTable1672866368425.html","title":"class - CreateCompaniesTable1672866368425","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCompaniesTable1672866368425\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/database/migrations/1672866368425-create-companies-table.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/providers/database/migrations/1672866368425-create-companies-table.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/providers/database/migrations/1672866368425-create-companies-table.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner, Table } from 'typeorm';\n\nexport class CreateCompaniesTable1672866368425 implements MigrationInterface {\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.createTable(\n      new Table({\n        name: 'companies',\n        columns: [\n          {\n            name: '_eq',\n            type: 'uuid',\n            isPrimary: true,\n            generationStrategy: 'uuid',\n            default: 'uuid_generate_v4()',\n          },\n          {\n            name: 'logo',\n            type: 'varchar',\n          },\n          {\n            name: 'name',\n            type: 'varchar',\n          },\n          {\n            name: 'cnpj',\n            type: 'varchar',\n          },\n          {\n            name: 'site',\n            type: 'varchar',\n          },\n          {\n            name: 'created_at',\n            type: 'timestamp',\n            default: 'now()',\n          },\n          {\n            name: 'updated_at',\n            type: 'timestamp',\n            default: 'now()',\n          },\n        ],\n      }),\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.dropTable('companies');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateCompanyService.html":{"url":"injectables/CreateCompanyService.html","title":"injectable - CreateCompanyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateCompanyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/companies/services/create-company.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(companiesRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/companies/services/create-company.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        companiesRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(undefined: CreateCompanyDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/companies/services/create-company.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                CreateCompanyDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, InternalServerErrorException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Company } from '../companies.entity';\nimport { CreateCompanyDTO } from '../dtos/create-company.dto';\n\n@Injectable()\nexport class CreateCompanyService {\n  constructor(\n    @InjectRepository(Company)\n    private companiesRepository: Repository,\n  ) {}\n\n  async execute({\n    logo,\n    name,\n    site,\n    cnpj,\n  }: CreateCompanyDTO): Promise {\n    let company: Company;\n    try {\n      company = this.companiesRepository.create({\n        logo,\n        name,\n        site,\n        cnpj,\n      });\n    } catch (e) {\n      throw new InternalServerErrorException();\n    }\n\n    try {\n      await this.companiesRepository.save(company);\n    } catch (e) {\n      throw new InternalServerErrorException();\n    }\n\n    return company;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateUserService.html":{"url":"injectables/CreateUserService.html","title":"injectable - CreateUserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateUserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/services/create-user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository, hashProvider: BCryptProvider)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/services/create-user.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hashProvider\n                                                  \n                                                        \n                                                                        BCryptProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(undefined: CreateUserDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/services/create-user.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                CreateUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { BCryptProvider } from 'src/providers/encriptation/bcrypt.provider';\nimport { Repository } from 'typeorm';\nimport { CreateUserDTO } from '../dtos/create-user.dto';\nimport { User } from '../users.entity';\n\n@Injectable()\nexport class CreateUserService {\n  constructor(\n    @InjectRepository(User)\n    private usersRepository: Repository,\n    private hashProvider: BCryptProvider,\n  ) {}\n\n  async execute({\n    profilePicture,\n    name,\n    email,\n    password,\n    office,\n    accessLevel,\n  }: CreateUserDTO): Promise {\n    const hashedPassword = await this.hashProvider.hash({\n      password,\n    });\n\n    const createdUser = this.usersRepository.create({\n      profilePicture,\n      name,\n      email,\n      password: hashedPassword,\n      office,\n      accessLevel,\n    });\n\n    await this.usersRepository.save(createdUser);\n\n    delete createdUser.password;\n\n    return createdUser;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUsersTable1672782049384.html":{"url":"classes/CreateUsersTable1672782049384.html","title":"class - CreateUsersTable1672782049384","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUsersTable1672782049384\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/database/migrations/1672782049384-create-users-table.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/providers/database/migrations/1672782049384-create-users-table.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/providers/database/migrations/1672782049384-create-users-table.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner, Table } from 'typeorm';\n\nexport class CreateUsersTable1672782049384 implements MigrationInterface {\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query('CREATE EXTENSION IF NOT EXISTS \"uuid-ossp\"');\n    await queryRunner.createTable(\n      new Table({\n        name: 'users',\n        columns: [\n          {\n            name: '_eq',\n            type: 'uuid',\n            isPrimary: true,\n            generationStrategy: 'uuid',\n            default: 'uuid_generate_v4()',\n          },\n          {\n            name: 'profile_picture',\n            type: 'varchar',\n          },\n          {\n            name: 'name',\n            type: 'varchar',\n          },\n          {\n            name: 'email',\n            type: 'varchar',\n            isUnique: true,\n          },\n          {\n            name: 'password',\n            type: 'varchar',\n          },\n          {\n            name: 'office',\n            type: 'varchar',\n          },\n          {\n            name: 'access_level',\n            type: 'varchar',\n          },\n\n          {\n            name: 'created_at',\n            type: 'timestamp',\n            default: 'now()',\n          },\n          {\n            name: 'updated_at',\n            type: 'timestamp',\n            default: 'now()',\n          },\n        ],\n      }),\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.dropTable('users');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/providers/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { databaseProviders } from './database.provider';\n\n@Module({\n  providers: [...databaseProviders],\n  exports: [...databaseProviders],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EncriptationModule.html":{"url":"modules/EncriptationModule.html","title":"module - EncriptationModule","body":"\n                   \n\n\n\n\n    Modules\n    EncriptationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_EncriptationModule\n\n\n\ncluster_EncriptationModule_exports\n\n\n\n\nBCryptProvider \n\nBCryptProvider \n\n\n\nEncriptationModule\n\nEncriptationModule\n\nBCryptProvider  -->\n\nEncriptationModule->BCryptProvider \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/providers/encriptation/encriptation.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            BCryptProvider\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BCryptProvider } from './bcrypt.provider';\n\n@Module({\n  providers: [BCryptProvider],\n  exports: [BCryptProvider],\n})\nexport class EncriptationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindCompaniesService.html":{"url":"injectables/FindCompaniesService.html","title":"injectable - FindCompaniesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FindCompaniesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/companies/services/find-companies.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(companiesRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/companies/services/find-companies.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        companiesRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/companies/services/find-companies.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ILike, Repository } from 'typeorm';\nimport { Company } from '../companies.entity';\n\n@Injectable()\nexport class FindCompaniesService {\n  constructor(\n    @InjectRepository(Company)\n    private companiesRepository: Repository,\n  ) {}\n\n  async execute(query?: string): Promise {\n    const resolvedQuery = query ? `%${query}%` : '%%';\n    const findCompanies = await this.companiesRepository.find({\n      where: [\n        {\n          name: ILike(resolvedQuery),\n        },\n      ],\n    });\n\n    return findCompanies;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindUsersService.html":{"url":"injectables/FindUsersService.html","title":"injectable - FindUsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FindUsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/services/find-users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/services/find-users.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/services/find-users.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ILike, Repository } from 'typeorm';\nimport { User } from '../users.entity';\n\n@Injectable()\nexport class FindUsersService {\n  constructor(\n    @InjectRepository(User)\n    private usersRepository: Repository,\n  ) {}\n\n  async execute(query?: string): Promise {\n    const resolvedQuery = query ? `%${query}%` : '%%';\n    const findUsers = await this.usersRepository.find({\n      where: [\n        {\n          accessLevel: ILike(resolvedQuery),\n        },\n        {\n          email: ILike(resolvedQuery),\n        },\n        {\n          name: ILike(resolvedQuery),\n        },\n        {\n          office: ILike(resolvedQuery),\n        },\n      ],\n    });\n\n    findUsers.forEach((u) => delete u.password);\n\n    return findUsers;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { JWT_STRATEGY } from 'src/config/constants';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard(JWT_STRATEGY) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/strategies/jwt.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/strategies/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { JWT_SECRET_KEY } from 'src/config/constants';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: JWT_SECRET_KEY,\n    });\n  }\n\n  async validate(payload: any) {\n    return { userId: payload.sub, username: payload.username };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/guards/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { LOCAL_STRATEGY } from 'src/config/constants';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard(LOCAL_STRATEGY) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/strategies/local.stratedy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loginService: LoginService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/strategies/local.stratedy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loginService\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/strategies/local.stratedy.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { LoginService } from '../services/login.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private loginService: LoginService) {\n    super({\n      usernameField: 'email',\n    });\n  }\n\n  async validate(email: string, password: string): Promise {\n    const loggedUser = await this.loginService.execute({ email, password });\n\n    return loggedUser;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginService.html":{"url":"injectables/LoginService.html","title":"injectable - LoginService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/services/login.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository, jwtService: JwtService, hashProvider: BCryptProvider)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/services/login.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hashProvider\n                                                  \n                                                        \n                                                                        BCryptProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(undefined: LoginUserDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/services/login.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                LoginUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, InternalServerErrorException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { User } from 'src/modules/users/users.entity';\nimport { BCryptProvider } from 'src/providers/encriptation/bcrypt.provider';\nimport { Repository } from 'typeorm';\nimport { LoggedUserDTO } from '../dtos/logged-user.dto';\nimport { LoginUserDTO } from '../dtos/login-user.dto';\n\n@Injectable()\nexport class LoginService {\n  constructor(\n    @InjectRepository(User)\n    private usersRepository: Repository,\n    private jwtService: JwtService,\n    private hashProvider: BCryptProvider,\n  ) {}\n\n  async execute({ email, password }: LoginUserDTO): Promise {\n    let user: User;\n    try {\n      user = await this.usersRepository.findOne({\n        where: {\n          email,\n        },\n      });\n    } catch (e) {\n      throw new InternalServerErrorException();\n    }\n\n    if (!user) throw new Error('Oops! Email or password does not match!');\n\n    const passwordValidated = await this.hashProvider.compare({\n      storedPassword: user.password,\n      typedPassword: password,\n    });\n\n    if (!passwordValidated)\n      throw new Error('Oops! Email or password does not match!');\n\n    delete user.password;\n\n    const payload = {\n      email: user.email,\n      sub: user._eq,\n    };\n\n    const accessToken = this.jwtService.sign(payload);\n\n    const loggedUser: LoggedUserDTO = {\n      user,\n      accessToken,\n    };\n\n    return loggedUser;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RequestWithUser.html":{"url":"interfaces/RequestWithUser.html","title":"interface - RequestWithUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RequestWithUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/request-with-user.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Request\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Request } from 'express';\nimport { User } from 'src/modules/users/users.entity';\nexport interface RequestWithUser extends Request {\n  user: User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _eq\n                            \n                            \n                                accessLevel\n                            \n                            \n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                office\n                            \n                            \n                                password\n                            \n                            \n                                profilePicture\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _eq\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/users.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        accessLevel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'access_level'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/users.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: 'created_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/users.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/users.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/users.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        office\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/users.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/users.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profilePicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'profile_picture'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/users.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: 'updated_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/users.entity.ts:36\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\n@Entity('users')\nexport class User {\n  @PrimaryGeneratedColumn('uuid')\n  _eq: string;\n\n  @Column({ name: 'profile_picture' })\n  profilePicture: string;\n\n  @Column()\n  name: string;\n\n  @Column()\n  email: string;\n\n  @Column()\n  password: string;\n\n  @Column()\n  office: string;\n\n  @Column({ name: 'access_level' })\n  accessLevel: string;\n\n  @CreateDateColumn({ name: 'created_at' })\n  createdAt: Date;\n\n  @UpdateDateColumn({ name: 'updated_at' })\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                read\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDTO: CreateUserDTO, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDTO\n                                    \n                                                CreateUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                    \n                    read(query: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  HttpStatus,\n  Post,\n  Query,\n  Res,\n} from '@nestjs/common';\nimport { Response } from 'express';\nimport { CreateUserDTO } from './dtos/create-user.dto';\nimport { CreateUserService } from './services/create-user.service';\nimport { FindUsersService } from './services/find-users.service';\n\n@Controller('users')\nexport class UsersController {\n  constructor(\n    private readonly createUserService: CreateUserService,\n    private readonly findUsersService: FindUsersService,\n  ) {}\n\n  @Post()\n  async create(@Body() createUserDTO: CreateUserDTO, @Res() res: Response) {\n    const createdUser = await this.createUserService.execute(createUserDTO);\n    res.json(createdUser).status(HttpStatus.CREATED);\n  }\n\n  @Get()\n  async read(@Query('query') query: string, @Res() res: Response) {\n    const users = await this.findUsersService.execute(query);\n    res.json(users).status(HttpStatus.OK);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nEncriptationModule\n\nEncriptationModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nEncriptationModule->UsersModule\n\n\n\n\n\nCreateUserService\n\nCreateUserService\n\nUsersModule -->\n\nCreateUserService->UsersModule\n\n\n\n\n\nFindUsersService\n\nFindUsersService\n\nUsersModule -->\n\nFindUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CreateUserService\n                        \n                        \n                            FindUsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            EncriptationModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { EncriptationModule } from 'src/providers/encriptation/encriptation.module';\nimport { usersServices } from './services';\nimport { UsersController } from './users.controller';\nimport { User } from './users.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User]), EncriptationModule],\n  providers: [...usersServices],\n  controllers: [UsersController],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/config/constants.ts\n            \n            variable\n            COMPARE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/constants.ts\n            \n            variable\n            DATA_SOURCE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/constants.ts\n            \n            variable\n            HASH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/constants.ts\n            \n            variable\n            JWT_SECRET_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/constants.ts\n            \n            variable\n            JWT_STRATEGY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/constants.ts\n            \n            variable\n            LOCAL_STRATEGY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/constants.ts\n            \n            variable\n            POSTGRES_DATABASE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/constants.ts\n            \n            variable\n            POSTGRES_PASSWORD\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/constants.ts\n            \n            variable\n            POSTGRES_PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/constants.ts\n            \n            variable\n            POSTGRES_USERNAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/interfaces/request-with-user.interface.ts\n            \n            interface\n            RequestWithUser\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/guards/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/services/change-password.service.ts\n            \n            injectable\n            ChangePasswordService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/services/index.ts\n            \n            variable\n            authServices\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/services/login.service.ts\n            \n            injectable\n            LoginService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/strategies/index.ts\n            \n            variable\n            authStrategies\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/strategies/local.stratedy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/companies/companies.controller.ts\n            \n            controller\n            CompaniesController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/companies/companies.entity.ts\n            \n            entity\n            Company\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/companies/services/create-company.service.ts\n            \n            injectable\n            CreateCompanyService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/companies/services/find-companies.service.ts\n            \n            injectable\n            FindCompaniesService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/companies/services/index.ts\n            \n            variable\n            companiesServices\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/services/create-user.service.ts\n            \n            injectable\n            CreateUserService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/users/services/find-users.service.ts\n            \n            injectable\n            FindUsersService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/users/services/index.ts\n            \n            variable\n            usersServices\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/users/users.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/providers/database/database.provider.ts\n            \n            variable\n            databaseProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/providers/database/migrations/1672782049384-create-users-table.ts\n            \n            class\n            CreateUsersTable1672782049384\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/providers/database/migrations/1672866368425-create-companies-table.ts\n            \n            class\n            CreateCompaniesTable1672866368425\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/providers/database/typeorm-datasource.ts\n            \n            variable\n            configService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/providers/database/typeorm-datasource.ts\n            \n            variable\n            databaseConfigurations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/providers/database/typeorm-datasource.ts\n            \n            variable\n            dataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/providers/encriptation/bcrypt.provider.ts\n            \n            class\n            BCryptProvider\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/apollo : ^10.1.7\n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.2.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/graphql : ^10.1.7\n        \n            @nestjs/jwt : ^10.0.1\n        \n            @nestjs/passport : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            apollo-server-express : ^3.11.1\n        \n            bcrypt : ^5.1.0\n        \n            graphql : ^16.6.0\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.8.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            typeorm : ^0.3.11\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nnosconformes-api\nAPI do sistema nosconformes feito pela empresa BlackElephant para a empresa DM11\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2023 Guilherme Sartori\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompaniesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EncriptationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CompaniesModule\n\n\n\ncluster_CompaniesModule_providers\n\n\n\ncluster_EncriptationModule\n\n\n\ncluster_EncriptationModule_exports\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nEncriptationModule\n\nEncriptationModule\n\nAuthModule -->\n\nEncriptationModule->AuthModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nEncriptationModule->UsersModule\n\n\n\nAppModule -->\n\nEncriptationModule->AppModule\n\n\n\n\n\nBCryptProvider \n\nBCryptProvider \n\nBCryptProvider  -->\n\nEncriptationModule->BCryptProvider \n\n\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nChangePasswordService\n\nChangePasswordService\n\nAuthModule -->\n\nChangePasswordService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nLoginService\n\nLoginService\n\nAuthModule -->\n\nLoginService->AuthModule\n\n\n\n\n\nCreateCompanyService\n\nCreateCompanyService\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nCompaniesModule -->\n\nCreateCompanyService->CompaniesModule\n\n\n\n\n\nFindCompaniesService\n\nFindCompaniesService\n\nCompaniesModule -->\n\nFindCompaniesService->CompaniesModule\n\n\n\n\n\nCreateUserService\n\nCreateUserService\n\nUsersModule -->\n\nCreateUserService->UsersModule\n\n\n\n\n\nFindUsersService\n\nFindUsersService\n\nUsersModule -->\n\nFindUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CompareDTO   (src/.../bcrypt.provider.ts)\n                        \n                        \n                            CompareHash   (src/.../bcrypt.provider.ts)\n                        \n                        \n                            CreateCompanyDTO   (src/.../create-company.dto.ts)\n                        \n                        \n                            CreateUserDTO   (src/.../create-user.dto.ts)\n                        \n                        \n                            GenerateHash   (src/.../bcrypt.provider.ts)\n                        \n                        \n                            HashDTO   (src/.../bcrypt.provider.ts)\n                        \n                        \n                            LoggedUserDTO   (src/.../logged-user.dto.ts)\n                        \n                        \n                            LoginUserDTO   (src/.../login-user.dto.ts)\n                        \n                        \n                            NewPasswordDTO   (src/.../new-password.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/providers/encriptation/bcrypt.provider.ts\n    \n    \n        \n            \n                \n                    \n                    CompareDTO\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CompareHash\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GenerateHash\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HashDTO\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/modules/companies/dtos/create-company.dto.ts\n    \n    \n        \n            \n                \n                    \n                    CreateCompanyDTO\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/modules/users/dtos/create-user.dto.ts\n    \n    \n        \n            \n                \n                    \n                    CreateUserDTO\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/modules/auth/dtos/logged-user.dto.ts\n    \n    \n        \n            \n                \n                    \n                    LoggedUserDTO\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/modules/auth/dtos/login-user.dto.ts\n    \n    \n        \n            \n                \n                    \n                    LoginUserDTO\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/modules/auth/dtos/new-password.dto.ts\n    \n    \n        \n            \n                \n                    \n                    NewPasswordDTO\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            authServices   (src/.../index.ts)\n                        \n                        \n                            authStrategies   (src/.../index.ts)\n                        \n                        \n                            companiesServices   (src/.../index.ts)\n                        \n                        \n                            COMPARE   (src/.../constants.ts)\n                        \n                        \n                            configService   (src/.../typeorm-datasource.ts)\n                        \n                        \n                            DATA_SOURCE   (src/.../constants.ts)\n                        \n                        \n                            databaseConfigurations   (src/.../typeorm-datasource.ts)\n                        \n                        \n                            databaseProviders   (src/.../database.provider.ts)\n                        \n                        \n                            dataSource   (src/.../typeorm-datasource.ts)\n                        \n                        \n                            HASH   (src/.../constants.ts)\n                        \n                        \n                            JWT_SECRET_KEY   (src/.../constants.ts)\n                        \n                        \n                            JWT_STRATEGY   (src/.../constants.ts)\n                        \n                        \n                            LOCAL_STRATEGY   (src/.../constants.ts)\n                        \n                        \n                            POSTGRES_DATABASE   (src/.../constants.ts)\n                        \n                        \n                            POSTGRES_PASSWORD   (src/.../constants.ts)\n                        \n                        \n                            POSTGRES_PORT   (src/.../constants.ts)\n                        \n                        \n                            POSTGRES_USERNAME   (src/.../constants.ts)\n                        \n                        \n                            usersServices   (src/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/auth/services/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authServices\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [ChangePasswordService, LoginService]\n                    \n                \n\n\n        \n    \n\n    src/modules/auth/strategies/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authStrategies\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [JwtStrategy, LocalStrategy]\n                    \n                \n\n\n        \n    \n\n    src/modules/companies/services/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        companiesServices\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [CreateCompanyService, FindCompaniesService]\n                    \n                \n\n\n        \n    \n\n    src/config/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        COMPARE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'COMPARE'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATA_SOURCE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'DATA_SOURCE'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        HASH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'HASH'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        JWT_SECRET_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '8aa0f4635a4e4e982cd3c7e03c70a950'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        JWT_STRATEGY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'jwt'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LOCAL_STRATEGY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'local'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        POSTGRES_DATABASE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'POSTGRES_DATABASE'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        POSTGRES_PASSWORD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'POSTGRES_PASSWORD'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        POSTGRES_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'POSTGRES_PORT'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        POSTGRES_USERNAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'POSTGRES_USERNAME'\n                    \n                \n\n\n        \n    \n\n    src/providers/database/typeorm-datasource.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ConfigService()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        databaseConfigurations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DataSourceOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: 'default',\n  type: 'postgres',\n  host: 'localhost',\n  port: configService.get(POSTGRES_PORT) || 5432,\n  username: configService.get(POSTGRES_USERNAME),\n  password: configService.get(POSTGRES_PASSWORD),\n  database: configService.get(POSTGRES_DATABASE),\n  migrationsTableName: 'migrations',\n  entities: [\n    resolve(__dirname, '..', '..', 'modules', '**', '**.entity{.ts,.js}'),\n  ],\n  migrations: [resolve(__dirname, 'migrations', '*{.ts,.js}')],\n  subscribers: [resolve(__dirname, 'subscriber', '*{.ts,.js}')],\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DataSource(databaseConfigurations)\n                    \n                \n\n\n        \n    \n\n    src/providers/database/database.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        databaseProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    provide: DATA_SOURCE,\n    useFactory: async () => {\n      return dataSource.initialize();\n    },\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/modules/users/services/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        usersServices\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [CreateUserService, FindUsersService]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
